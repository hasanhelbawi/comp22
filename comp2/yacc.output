Terminals which are not used

   ID
   SYMBOL
   expr_1


State 10 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol

    7 class_interface: class_interface_header class_interface_body

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables AT_END
   15                     | protocol_reference_list interface_declaration_list AT_END
   16                     | instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list AT_END
   18                     | instance_variables AT_END
   19                     | interface_declaration_list AT_END
   20                     | AT_END

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN

   22 ids_list: IDENTIFIER
   23         | ids_list error IDENTIFIER
   24         | ids_list COMMA IDENTIFIER

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   26                   | OPEN_S instance_variable_declarations error
   27                   | OPEN_S instance_variable_declarations

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   29                               | instance_variable_declaration
   30                               | variable_declaration_list

   31 instance_variable_declaration: visibility_specification variable_declaration_list

   32 variable_declaration_list: variable_declaration_list variable_declaration
   33                          | variable_declaration

   34 visibility_specification: AT_PRIVATE
   35                         | AT_PROTECTED
   36                         | AT_PUBLIC

   37 variable_declaration: type IDENTIFIER SEMI_COMA
   38                     | type IDENTIFIER error
   39                     | type IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr error
   41                     | CONST type IDENTIFIER SEMI_COMA
   42                     | CONST type IDENTIFIER error
   43                     | CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr error
   45                     | Enum
   46                     | structrule
   47                     | ArrayOne
   48                     | ArrayN

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA
   50     | TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

   53 variable_declarations: type IDENTIFIER SEMI_COMA
   54                      | variable_declarations type IDENTIFIER SEMI_COMA
   55                      | type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   56                      | variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations CONST type IDENTIFIER SEMI_COMA
   58                      | CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   60                      | CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

   65 array_body: array_body COMMA expr
   66           | expr
   67           | array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   68           | OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR
   73      | Multi OPEN_ARR INT_VAL CLOSE_ARR

   74 array_body2: OPEN_S array_body CLOSE_S
   75            | expr
   76            | array_body2 COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA expr

   78 type: simple_type
   79     | complex_type

   80 simple_type: INT
   81            | CHAR
   82            | FLOAT
   83            | NSSTRING
   84            | VOID

   85 complex_type: IDENTIFIER MULTI

   86 interface_declaration_list: interface_declaration_list interface_declaration
   87                           | interface_declaration

   88 interface_declaration: class_method_declaration
   89                      | instance_method_declaration

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA
   91                         | PLUS p_type method_selector error
   92                         | PLUS method_selector SEMI_COMA
   93                         | PLUS method_selector error

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
   95                            | MINUS method_selector SEMI_COMA
   96                            | MINUS p_type method_selector error
   97                            | MINUS method_selector error

   98 p_type: OPEN_P type CLOSE_P
   99       | error type CLOSE_P
  100       | OPEN_P type error

  101 @1: /* empty */

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER

  104 parameter_list: parameter_list SEMI_COLUMN parameter
  105               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER error parameter
  107               | parameter_list IDENTIFIER parameter
  108               | parameter

  109 parameter: p_type IDENTIFIER

  110 try_catch: TRY block_body catch_statment

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment
  112               | FINALLY block_body

  113 Exception_type: NUllPointerException
  114               | OUtOfBoundryException
  115               | CAstException

  116 class_implementation: class_implementation_header class_implementation_body

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER IDENTIFIER
  120                            | AT_IMPLEMENTATION IDENTIFIER

  121 class_implementation_body: instance_variables implementation_definition_list AT_END
  122                          | instance_variables AT_END
  123                          | implementation_definition_list AT_END

  124 implementation_definition_list: implementation_definition_list implementation_definition
  125                               | implementation_definition

  126 implementation_definition: class_implementation_definition
  127                          | instance_implementation_definition

  128 class_implementation_definition: class_implementation_definition_header block_body

  129 class_implementation_definition_header: /* empty */
  130                                       | PLUS method_selector
  131                                       | PLUS p_type method_selector

  132 instance_implementation_definition: instance_implementation_definition_header block_body

  133 instance_implementation_definition_header: MINUS p_type method_selector

  134 @2: /* empty */

  135 instance_implementation_definition_header: MINUS method_selector @2 MINUS p_type method_selector
  136                                          | MINUS method_selector

  137 statement_list: statement_list statement
  138               | statement

  139 statement: loop_statement
  140          | conditional_statement
  141          | expr SEMI_COMA
  142          | variable_declaration

  143 @3: /* empty */

  144 statement: @3 block_body
  145          | return_statement
  146          | try_catch

  147 return_statement: RETURN expr SEMI_COMA
  148                 | RETURN expr error

  149 loop_statement: for_loop
  150               | while_loop
  151               | do_while_loop

  152 for_loop: for_loop_header statement

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  155                | FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  156                | FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  159                | FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  160                | FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  161                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  163                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  164                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  165                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  167 for_initializer: INT IDENTIFIER EQUAL expr
  168                | INT IDENTIFIER expr
  169                | INT IDENTIFIER error expr
  170                | IDENTIFIER EQUAL expr
  171                | IDENTIFIER expr
  172                | IDENTIFIER error expr
  173                | IDENTIFIER

  174 logic_expr: expr LESS_THAN expr
  175           | expr MORE_THAN expr
  176           | expr LESS_OR_EQUAL expr
  177           | expr MORE_OR_EQUAL expr
  178           | expr EQUAL_EQUAL expr
  179           | NOT_EQUAL expr
  180           | OPEN_P logic_expr CLOSE_P
  181           | logic_expr AND_AND logic_expr
  182           | logic_expr OR_OR logic_expr

  183 expr: assign_expr
  184     | simple_expr

  185 logic_expr2: expr2 LESS_THAN expr2
  186            | expr2 MORE_THAN expr2
  187            | expr2 LESS_OR_EQUAL expr2
  188            | expr2 MORE_OR_EQUAL expr2
  189            | expr2 EQUAL_EQUAL expr2
  190            | NOT_EQUAL expr2
  191            | OPEN_P logic_expr2 CLOSE_P
  192            | logic_expr2 AND_AND logic_expr2
  193            | logic_expr2 OR_OR logic_expr2
  194            | error expr2
  195            | OPEN_P logic_expr2 error
  196            | error logic_expr2 CLOSE_P

  197 expr2: simple_expr

  198 assign_expr: long_id EQUAL simple_expr

  199 long_id: long_id DOT IDENTIFIER
  200        | message_call
  201        | IDENTIFIER

  202 simple_expr: STRING_VAL
  203            | INT_VAL
  204            | FLOAT_VAL
  205            | CHAR_VAL
  206            | TRUE
  207            | FALSE
  208            | long_id
  209            | simple_expr PLUS simple_expr
  210            | simple_expr MINUS simple_expr
  211            | simple_expr MULTI simple_expr
  212            | simple_expr DIV simple_expr
  213            | OPEN_P simple_expr CLOSE_P
  214            | p_type simple_expr

  215 block_body: OPEN_S statement_list CLOSE_S
  216           | OPEN_S CLOSE_S

  217 while_loop: while_loop_header statement

  218 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P
  219                  | WHILE OPEN_P logic_expr error
  220                  | WHILE logic_expr CLOSE_P
  221                  | WHILE error logic_expr CLOSE_P

  222 do_while_loop: DO statement while_loop_header SEMI_COMA

  223 conditional_statement: if_header statement
  224                      | if_header statement ELSE statement
  225                      | switch

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  227       | SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  228       | SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  229       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  230       | SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body
  233            | DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  234            | DEFAULT SEMI_COLUMN statement error SEMI_COMA

  235 switch_statement: logic_expr
  236                 | expr

  237 case_statement: logic_expr2
  238               | expr2

  239 if_header: IF OPEN_P logic_expr CLOSE_P
  240          | IF OPEN_P logic_expr error
  241          | IF logic_expr CLOSE_P
  242          | IF error logic_expr CLOSE_P

  243 message_call: OPEN_ARR sender message CLOSE_ARR

  244 sender: message_call
  245       | IDENTIFIER

  246 message: IDENTIFIER
  247        | IDENTIFIER SEMI_COLUMN argument_list

  248 argument_list: argument_list argument
  249              | argument

  250 argument: SEMI_COLUMN simple_expr
  251         | error simple_expr
  252         | IDENTIFIER SEMI_COLUMN simple_expr
  253         | IDENTIFIER simple_expr
  254         | IDENTIFIER error simple_expr

  255 protocol: protocol_header protocol_body

  256 protocol_header: AT_PROTOCOL IDENTIFIER

  257 protocol_body: protocol_reference_list interface_declaration_list AT_END
  258              | interface_declaration_list AT_END
  259              | protocol_reference_list AT_END
  260              | AT_END


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 26 38 40 42 44 91 93 96 97 99 100 106 118 148 154
    156 158 160 169 172 194 195 196 219 221 227 228 229 230 232 234
    240 242 251 254
TRY (258) 110
CATCH (259) 111
NSEXception (260) 111
NUllPointerException (261) 113
OUtOfBoundryException (262) 114
CAstException (263) 115
FINALLY (264) 112
AT_INTERFACE (265) 8 9 10 11 12
IDENTIFIER (266) 8 9 10 11 12 22 23 24 37 38 39 40 41 42 43 44 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 71 85 102 103 105
    106 107 109 117 118 119 120 167 168 169 170 171 172 173 199 201
    245 246 247 252 253 254 256
SEMI_COLUMN (267) 8 10 55 56 59 60 102 104 105 117 231 232 233 234
    247 250 252
NSSTRING (268) 83
FLOAT (269) 82
CHAR (270) 81
INT (271) 80 167 168 169
SEMI_COMA (272) 37 39 41 43 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 69 70 71 90 92 94 95 141 147 153 154 155 156 157 158 159
    160 161 162 163 164 165 166 222 231 232 233 234
ID (273)
AT_PUBLIC (274) 36
AT_PROTECTED (275) 35
AT_PRIVATE (276) 34
OPEN_S (277) 25 26 27 49 50 51 52 61 63 64 69 71 74 76 215 216 226
    227 228 229
CLOSE_S (278) 25 49 50 51 52 61 63 64 69 71 74 76 215 216 226 227 228
    230
COMMA (279) 24 65 67 76 77
LESS_THAN (280) 21 174 185
MORE_THAN (281) 21 175 186
AT_END (282) 13 14 15 16 17 18 19 20 121 122 123 257 258 259 260
CONST (283) 41 42 43 44 57 58 59 60
VOID (284) 84
PLUS (285) 90 91 92 93 130 131 209
MINUS (286) 94 95 96 97 133 135 136 210
OPEN_P (287) 98 100 111 153 154 157 158 161 162 163 164 165 166 180
    191 195 213 218 219 226 228 229 230 231 232 239 240
CLOSE_P (288) 98 99 111 153 155 156 157 159 160 161 162 163 164 165
    166 180 191 196 213 218 220 221 226 227 229 230 231 232 239 241
    242
AT_IMPLEMENTATION (289) 117 118 119 120
AND_AND (290) 181 192
OR_OR (291) 182 193
STRING_VAL (292) 202
FLOAT_VAL (293) 204
LESS_OR_EQUAL (294) 176 187
CHAR_VAL (295) 205
INT_VAL (296) 61 62 63 67 68 72 73 203
MORE_OR_EQUAL (297) 177 188
MULTI (298) 85 211
EQUAL_EQUAL (299) 178 189
NOT_EQUAL (300) 179 190
FOR (301) 153 154 155 156 157 158 159 160 161 162 163 164 165 166
EQUAL (302) 39 40 43 44 61 63 64 67 68 69 71 167 170 198
DIV (303) 212
WHILE (304) 218 219 220 221
IF (305) 239 240 241 242
OPEN_ARR (306) 61 62 63 64 67 68 72 73 243
CLOSE_ARR (307) 61 62 63 64 67 68 72 73 243
TRUE (308) 206
FALSE (309) 207
RETURN (310) 147 148
AT_PROTOCOL (311) 256
DO (312) 222
DOT (313) 199
SYMBOL (314)
SWITCH (315) 226 227 228 229 230
BREAK (316) 231 233
DEFAULT (317) 233 234
CASE (318) 231 232
STRUCT (319) 51 52
TYPEDEF (320) 50
ENUM (321) 49 50
if_h (322)
ELSE (323) 224
expr_1 (324)
p_type_expr_prec (325)
long_id_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6, on right: 2 3
class_interface (76)
    on left: 7, on right: 4
class_interface_header (77)
    on left: 8 9 10 11 12, on right: 7
class_interface_body (78)
    on left: 13 14 15 16 17 18 19 20, on right: 7
protocol_reference_list (79)
    on left: 21, on right: 13 14 15 17 257 259
ids_list (80)
    on left: 22 23 24, on right: 21 23 24 49 50 52
instance_variables (81)
    on left: 25 26 27, on right: 13 14 16 18 121 122
instance_variable_declarations (82)
    on left: 28 29 30, on right: 25 26 27 28
instance_variable_declaration (83)
    on left: 31, on right: 28 29
variable_declaration_list (84)
    on left: 32 33, on right: 30 31 32
visibility_specification (85)
    on left: 34 35 36, on right: 31
variable_declaration (86)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 32 33 142
Enum (87)
    on left: 49 50, on right: 45
structrule (88)
    on left: 51 52, on right: 46
variable_declarations (89)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52 54 56 57 59
ArrayOne (90)
    on left: 61 62 63 64, on right: 47
array_body (91)
    on left: 65 66 67 68, on right: 63 64 65 67 74 76
ArrayN (92)
    on left: 69 70 71, on right: 48
Multi (93)
    on left: 72 73, on right: 69 70 71 73
array_body2 (94)
    on left: 74 75 76 77, on right: 71 76 77
type (95)
    on left: 78 79, on right: 37 38 39 40 41 42 43 44 53 54 55 56 57
    58 59 60 61 62 63 64 69 70 71 98 99 100
simple_type (96)
    on left: 80 81 82 83 84, on right: 78
complex_type (97)
    on left: 85, on right: 79
interface_declaration_list (98)
    on left: 86 87, on right: 13 15 16 19 86 257 258
interface_declaration (99)
    on left: 88 89, on right: 86 87
class_method_declaration (100)
    on left: 90 91 92 93, on right: 88
instance_method_declaration (101)
    on left: 94 95 96 97, on right: 89
p_type (102)
    on left: 98 99 100, on right: 90 91 94 96 109 131 133 135 214
method_selector (103)
    on left: 102 103, on right: 90 91 92 93 94 95 96 97 130 131 133
    135 136
@1 (104)
    on left: 101, on right: 102
parameter_list (105)
    on left: 104 105 106 107 108, on right: 102 104 105 106 107
parameter (106)
    on left: 109, on right: 104 105 106 107 108
try_catch (107)
    on left: 110, on right: 146
catch_statment (108)
    on left: 111 112, on right: 110 111
Exception_type (109)
    on left: 113 114 115, on right: 111
class_implementation (110)
    on left: 116, on right: 5
class_implementation_header (111)
    on left: 117 118 119 120, on right: 116
class_implementation_body (112)
    on left: 121 122 123, on right: 116
implementation_definition_list (113)
    on left: 124 125, on right: 121 123 124
implementation_definition (114)
    on left: 126 127, on right: 124 125
class_implementation_definition (115)
    on left: 128, on right: 126
class_implementation_definition_header (116)
    on left: 129 130 131, on right: 128
instance_implementation_definition (117)
    on left: 132, on right: 127
instance_implementation_definition_header (118)
    on left: 133 135 136, on right: 132
@2 (119)
    on left: 134, on right: 135
statement_list (120)
    on left: 137 138, on right: 137 215
statement (121)
    on left: 139 140 141 142 144 145 146, on right: 137 138 152 217
    222 223 224 231 232 233 234
@3 (122)
    on left: 143, on right: 144
return_statement (123)
    on left: 147 148, on right: 145
loop_statement (124)
    on left: 149 150 151, on right: 139
for_loop (125)
    on left: 152, on right: 149
for_loop_header (126)
    on left: 153 154 155 156 157 158 159 160 161 162 163 164 165 166
   , on right: 152
for_initializer (127)
    on left: 167 168 169 170 171 172 173, on right: 153 154 155 156
    161 162 163
logic_expr (128)
    on left: 174 175 176 177 178 179 180 181 182, on right: 153 154
    155 156 157 158 159 160 162 164 180 181 182 218 219 220 221 235
    239 240 241 242
expr (129)
    on left: 183 184, on right: 65 66 67 68 75 77 141 147 148 153 154
    155 156 157 158 159 160 161 165 167 168 169 170 171 172 174 175
    176 177 178 179 236
logic_expr2 (130)
    on left: 185 186 187 188 189 190 191 192 193 194 195 196,
    on right: 191 192 193 195 196 237
expr2 (131)
    on left: 197, on right: 185 186 187 188 189 190 194 238
assign_expr (132)
    on left: 198, on right: 183
long_id (133)
    on left: 199 200 201, on right: 198 199 208
simple_expr (134)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213 214,
    on right: 39 40 43 44 55 56 59 60 184 197 198 209 210 211 212 213
    214 250 251 252 253 254
block_body (135)
    on left: 215 216, on right: 110 111 112 128 132 144
while_loop (136)
    on left: 217, on right: 150
while_loop_header (137)
    on left: 218 219 220 221, on right: 217 222
do_while_loop (138)
    on left: 222, on right: 151
conditional_statement (139)
    on left: 223 224 225, on right: 140
switch (140)
    on left: 226 227 228 229 230, on right: 225
switch_body (141)
    on left: 231 232 233 234, on right: 226 227 228 229 230 231 232
switch_statement (142)
    on left: 235 236, on right: 226 227 228 229 230
case_statement (143)
    on left: 237 238, on right: 231 232
if_header (144)
    on left: 239 240 241 242, on right: 223 224
message_call (145)
    on left: 243, on right: 200 244
sender (146)
    on left: 244 245, on right: 243
message (147)
    on left: 246 247, on right: 243
argument_list (148)
    on left: 248 249, on right: 247 248
argument (149)
    on left: 250 251 252 253 254, on right: 248 249
protocol (150)
    on left: 255, on right: 6
protocol_header (151)
    on left: 256, on right: 255
protocol_body (152)
    on left: 257 258 259 260, on right: 255


state 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    program                      go to state 4
    components                   go to state 5
    component                    go to state 6
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 1

    8 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE . IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE . IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


state 2

  117 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION . IDENTIFIER error IDENTIFIER
  119                            | AT_IMPLEMENTATION . IDENTIFIER IDENTIFIER
  120                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 14


state 3

  256 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 4

    0 $accept: program . $end

    $end  shift, and go to state 16


state 5

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    $default  reduce using rule 1 (program)

    component                    go to state 17
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 6

    3 components: component .

    $default  reduce using rule 3 (components)


state 7

    4 component: class_interface .

    $default  reduce using rule 4 (component)


state 8

    7 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 18
    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    class_interface_body         go to state 23
    protocol_reference_list      go to state 24
    instance_variables           go to state 25
    interface_declaration_list   go to state 26
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 9

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


state 10

  116 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 18
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    OPEN_S  [reduce using rule 129 (class_implementation_definition_header)]

    instance_variables                         go to state 32
    class_implementation_body                  go to state 33
    implementation_definition_list             go to state 34
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 11

    6 component: protocol .

    $default  reduce using rule 6 (component)


state 12

  255 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 40
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    protocol_reference_list      go to state 41
    interface_declaration_list   go to state 42
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29
    protocol_body                go to state 43


state 13

    8 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER . error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER . IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .

    error        shift, and go to state 44
    IDENTIFIER   shift, and go to state 45
    SEMI_COLUMN  shift, and go to state 46

    OPEN_S     reduce using rule 12 (class_interface_header)
    LESS_THAN  reduce using rule 12 (class_interface_header)
    AT_END     reduce using rule 12 (class_interface_header)
    PLUS       reduce using rule 12 (class_interface_header)
    MINUS      reduce using rule 12 (class_interface_header)


state 14

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER . error IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER . IDENTIFIER
  120                            | AT_IMPLEMENTATION IDENTIFIER .

    error        shift, and go to state 47
    IDENTIFIER   shift, and go to state 48
    SEMI_COLUMN  shift, and go to state 49

    OPEN_S  reduce using rule 120 (class_implementation_header)
    PLUS    reduce using rule 120 (class_implementation_header)
    MINUS   reduce using rule 120 (class_implementation_header)


state 15

  256 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 256 (protocol_header)


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 components: components component .

    $default  reduce using rule 2 (components)


state 18

   25 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   26                   | OPEN_S . instance_variable_declarations error
   27                   | OPEN_S . instance_variable_declarations

    IDENTIFIER    shift, and go to state 50
    NSSTRING      shift, and go to state 51
    FLOAT         shift, and go to state 52
    CHAR          shift, and go to state 53
    INT           shift, and go to state 54
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CONST         shift, and go to state 58
    VOID          shift, and go to state 59
    STRUCT        shift, and go to state 60
    TYPEDEF       shift, and go to state 61
    ENUM          shift, and go to state 62

    instance_variable_declarations  go to state 63
    instance_variable_declaration   go to state 64
    variable_declaration_list       go to state 65
    visibility_specification        go to state 66
    variable_declaration            go to state 67
    Enum                            go to state 68
    structrule                      go to state 69
    ArrayOne                        go to state 70
    ArrayN                          go to state 71
    type                            go to state 72
    simple_type                     go to state 73
    complex_type                    go to state 74


state 19

   21 protocol_reference_list: LESS_THAN . ids_list MORE_THAN

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 76


state 20

   20 class_interface_body: AT_END .

    $default  reduce using rule 20 (class_interface_body)


state 21

   90 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
   91                         | PLUS . p_type method_selector error
   92                         | PLUS . method_selector SEMI_COMA
   93                         | PLUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 80
    method_selector  go to state 81


state 22

   94 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
   95                            | MINUS . method_selector SEMI_COMA
   96                            | MINUS . p_type method_selector error
   97                            | MINUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 82
    method_selector  go to state 83


state 23

    7 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 7 (class_interface)


state 24

   13 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list . instance_variables AT_END
   15                     | protocol_reference_list . interface_declaration_list AT_END
   17                     | protocol_reference_list . AT_END

    OPEN_S  shift, and go to state 18
    AT_END  shift, and go to state 84
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    instance_variables           go to state 85
    interface_declaration_list   go to state 86
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 25

   16 class_interface_body: instance_variables . interface_declaration_list AT_END
   18                     | instance_variables . AT_END

    AT_END  shift, and go to state 87
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 88
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 26

   19 class_interface_body: interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 89
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 27

   87 interface_declaration_list: interface_declaration .

    $default  reduce using rule 87 (interface_declaration_list)


state 28

   88 interface_declaration: class_method_declaration .

    $default  reduce using rule 88 (interface_declaration)


state 29

   89 interface_declaration: instance_method_declaration .

    $default  reduce using rule 89 (interface_declaration)


state 30

  130 class_implementation_definition_header: PLUS . method_selector
  131                                       | PLUS . p_type method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 91
    method_selector  go to state 92


state 31

  133 instance_implementation_definition_header: MINUS . p_type method_selector
  135                                          | MINUS . method_selector @2 MINUS p_type method_selector
  136                                          | MINUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 93
    method_selector  go to state 94


state 32

  121 class_implementation_body: instance_variables . implementation_definition_list AT_END
  122                          | instance_variables . AT_END

    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    $default  reduce using rule 129 (class_implementation_definition_header)

    implementation_definition_list             go to state 96
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 33

  116 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 116 (class_implementation)


state 34

  123 class_implementation_body: implementation_definition_list . AT_END
  124 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    $default  reduce using rule 129 (class_implementation_definition_header)

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 35

  125 implementation_definition_list: implementation_definition .

    $default  reduce using rule 125 (implementation_definition_list)


state 36

  126 implementation_definition: class_implementation_definition .

    $default  reduce using rule 126 (implementation_definition)


state 37

  128 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 100


state 38

  127 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 127 (implementation_definition)


state 39

  132 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 101


state 40

  260 protocol_body: AT_END .

    $default  reduce using rule 260 (protocol_body)


state 41

  257 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  259              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 103
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 42

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  258 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 43

  255 protocol: protocol_header protocol_body .

    $default  reduce using rule 255 (protocol)


state 44

    9 class_interface_header: AT_INTERFACE IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 45

   11 class_interface_header: AT_INTERFACE IDENTIFIER IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


state 46

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN .

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 10 (class_interface_header)


state 47

  118 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


state 48

  119 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER IDENTIFIER .

    $default  reduce using rule 119 (class_implementation_header)


state 49

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


state 50

   85 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 109


state 51

   83 simple_type: NSSTRING .

    $default  reduce using rule 83 (simple_type)


state 52

   82 simple_type: FLOAT .

    $default  reduce using rule 82 (simple_type)


state 53

   81 simple_type: CHAR .

    $default  reduce using rule 81 (simple_type)


state 54

   80 simple_type: INT .

    $default  reduce using rule 80 (simple_type)


state 55

   36 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 36 (visibility_specification)


state 56

   35 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 35 (visibility_specification)


state 57

   34 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 34 (visibility_specification)


state 58

   41 variable_declaration: CONST . type IDENTIFIER SEMI_COMA
   42                     | CONST . type IDENTIFIER error
   43                     | CONST . type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST . type IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 110
    simple_type   go to state 73
    complex_type  go to state 74


state 59

   84 simple_type: VOID .

    $default  reduce using rule 84 (simple_type)


state 60

   51 structrule: STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 111


state 61

   50 Enum: TYPEDEF . ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    ENUM  shift, and go to state 112


state 62

   49 Enum: ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 113


state 63

   25 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   26                   | OPEN_S instance_variable_declarations . error
   27                   | OPEN_S instance_variable_declarations .
   28 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    error         shift, and go to state 114
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CLOSE_S       shift, and go to state 115

    OPEN_S  reduce using rule 27 (instance_variables)
    AT_END  reduce using rule 27 (instance_variables)
    PLUS    reduce using rule 27 (instance_variables)
    MINUS   reduce using rule 27 (instance_variables)

    instance_variable_declaration  go to state 116
    visibility_specification       go to state 66


state 64

   29 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 29 (instance_variable_declarations)


state 65

   30 instance_variable_declarations: variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 30 (instance_variable_declarations)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 66

   31 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    variable_declaration_list  go to state 118
    variable_declaration       go to state 67
    Enum                       go to state 68
    structrule                 go to state 69
    ArrayOne                   go to state 70
    ArrayN                     go to state 71
    type                       go to state 72
    simple_type                go to state 73
    complex_type               go to state 74


state 67

   33 variable_declaration_list: variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 68

   45 variable_declaration: Enum .

    $default  reduce using rule 45 (variable_declaration)


state 69

   46 variable_declaration: structrule .

    $default  reduce using rule 46 (variable_declaration)


state 70

   47 variable_declaration: ArrayOne .

    $default  reduce using rule 47 (variable_declaration)


state 71

   48 variable_declaration: ArrayN .

    $default  reduce using rule 48 (variable_declaration)


state 72

   37 variable_declaration: type . IDENTIFIER SEMI_COMA
   38                     | type . IDENTIFIER error
   39                     | type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type . IDENTIFIER EQUAL simple_expr error
   61 ArrayOne: type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type . IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type . IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type . IDENTIFIER Multi SEMI_COMA
   71       | type . IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 119


state 73

   78 type: simple_type .

    $default  reduce using rule 78 (type)


state 74

   79 type: complex_type .

    $default  reduce using rule 79 (type)


state 75

   22 ids_list: IDENTIFIER .

    $default  reduce using rule 22 (ids_list)


state 76

   21 protocol_reference_list: LESS_THAN ids_list . MORE_THAN
   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER

    error      shift, and go to state 120
    COMMA      shift, and go to state 121
    MORE_THAN  shift, and go to state 122


state 77

   99 p_type: error . type CLOSE_P

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74


state 78

  102 method_selector: IDENTIFIER . SEMI_COLUMN @1 parameter_list
  103                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 124

    $default  reduce using rule 103 (method_selector)


state 79

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74


state 80

   90 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
   91                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 126


state 81

   92 class_method_declaration: PLUS method_selector . SEMI_COMA
   93                         | PLUS method_selector . error

    error      shift, and go to state 127
    SEMI_COMA  shift, and go to state 128


state 82

   94 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA
   96                            | MINUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 129


state 83

   95 instance_method_declaration: MINUS method_selector . SEMI_COMA
   97                            | MINUS method_selector . error

    error      shift, and go to state 130
    SEMI_COMA  shift, and go to state 131


state 84

   17 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


state 85

   13 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables . AT_END

    AT_END  shift, and go to state 132
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 133
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 86

   15 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 134
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 87

   18 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 18 (class_interface_body)


state 88

   16 class_interface_body: instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 135
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 89

   19 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


state 90

   86 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 86 (interface_declaration_list)


state 91

  131 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 136


state 92

  130 class_implementation_definition_header: PLUS method_selector .

    $default  reduce using rule 130 (class_implementation_definition_header)


state 93

  133 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 137


state 94

  135 instance_implementation_definition_header: MINUS method_selector . @2 MINUS p_type method_selector
  136                                          | MINUS method_selector .

    OPEN_S    reduce using rule 136 (instance_implementation_definition_header)
    $default  reduce using rule 134 (@2)

    @2  go to state 138


state 95

  122 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 122 (class_implementation_body)


state 96

  121 class_implementation_body: instance_variables implementation_definition_list . AT_END
  124 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 139
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    $default  reduce using rule 129 (class_implementation_definition_header)

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 97

  123 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 123 (class_implementation_body)


state 98

  124 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 124 (implementation_definition_list)


state 99

  215 block_body: OPEN_S . statement_list CLOSE_S
  216           | OPEN_S . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 142
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement_list         go to state 160
    statement              go to state 161
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 100

  128 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 128 (class_implementation_definition)


state 101

  132 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 132 (instance_implementation_definition)


state 102

  259 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 259 (protocol_body)


state 103

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  257 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 178
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 104

  258 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 258 (protocol_body)


state 105

    9 class_interface_header: AT_INTERFACE IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 9 (class_interface_header)


state 106

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 8 (class_interface_header)


state 107

  118 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 118 (class_implementation_header)


state 108

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 117 (class_implementation_header)


state 109

   85 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 85 (complex_type)


state 110

   41 variable_declaration: CONST type . IDENTIFIER SEMI_COMA
   42                     | CONST type . IDENTIFIER error
   43                     | CONST type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type . IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 179


state 111

   51 structrule: STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    OPEN_S  shift, and go to state 180


state 112

   50 Enum: TYPEDEF ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 181


state 113

   49 Enum: ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 182


state 114

   26 instance_variables: OPEN_S instance_variable_declarations error .

    $default  reduce using rule 26 (instance_variables)


state 115

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 25 (instance_variables)


state 116

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 28 (instance_variable_declarations)


state 117

   32 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 32 (variable_declaration_list)


state 118

   31 instance_variable_declaration: visibility_specification variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 31 (instance_variable_declaration)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 119

   37 variable_declaration: type IDENTIFIER . SEMI_COMA
   38                     | type IDENTIFIER . error
   39                     | type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER . EQUAL simple_expr error
   61 ArrayOne: type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER . OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type IDENTIFIER . Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER . Multi SEMI_COMA
   71       | type IDENTIFIER . Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    error      shift, and go to state 183
    SEMI_COMA  shift, and go to state 184
    EQUAL      shift, and go to state 185
    OPEN_ARR   shift, and go to state 186

    Multi  go to state 187


state 120

   23 ids_list: ids_list error . IDENTIFIER

    IDENTIFIER  shift, and go to state 188


state 121

   24 ids_list: ids_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 189


state 122

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN .

    $default  reduce using rule 21 (protocol_reference_list)


state 123

   99 p_type: error type . CLOSE_P

    CLOSE_P  shift, and go to state 190


state 124

  102 method_selector: IDENTIFIER SEMI_COLUMN . @1 parameter_list

    $default  reduce using rule 101 (@1)

    @1  go to state 191


state 125

   98 p_type: OPEN_P type . CLOSE_P
  100       | OPEN_P type . error

    error    shift, and go to state 192
    CLOSE_P  shift, and go to state 193


state 126

   90 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
   91                         | PLUS p_type method_selector . error

    error      shift, and go to state 194
    SEMI_COMA  shift, and go to state 195


state 127

   93 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 93 (class_method_declaration)


state 128

   92 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 92 (class_method_declaration)


state 129

   94 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA
   96                            | MINUS p_type method_selector . error

    error      shift, and go to state 196
    SEMI_COMA  shift, and go to state 197


state 130

   97 instance_method_declaration: MINUS method_selector error .

    $default  reduce using rule 97 (instance_method_declaration)


state 131

   95 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 95 (instance_method_declaration)


state 132

   14 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 14 (class_interface_body)


state 133

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 198
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 134

   15 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


state 135

   16 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


state 136

  131 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 131 (class_implementation_definition_header)


state 137

  133 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 133 (instance_implementation_definition_header)


state 138

  135 instance_implementation_definition_header: MINUS method_selector @2 . MINUS p_type method_selector

    MINUS  shift, and go to state 199


state 139

  121 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 121 (class_implementation_body)


state 140

  110 try_catch: TRY . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 200


state 141

   85 complex_type: IDENTIFIER . MULTI
  201 long_id: IDENTIFIER .

    MULTI  shift, and go to state 109

    $default  reduce using rule 201 (long_id)


state 142

  216 block_body: OPEN_S CLOSE_S .

    $default  reduce using rule 216 (block_body)


state 143

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  213 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 202
    message_call  go to state 177


state 144

  202 simple_expr: STRING_VAL .

    $default  reduce using rule 202 (simple_expr)


state 145

  204 simple_expr: FLOAT_VAL .

    $default  reduce using rule 204 (simple_expr)


state 146

  205 simple_expr: CHAR_VAL .

    $default  reduce using rule 205 (simple_expr)


state 147

  203 simple_expr: INT_VAL .

    $default  reduce using rule 203 (simple_expr)


state 148

  153 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  155                | FOR . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  156                | FOR . error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  159                | FOR . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  160                | FOR . error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  161                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  163                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  164                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  165                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    error       shift, and go to state 203
    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 206
    OPEN_P      shift, and go to state 207

    for_initializer  go to state 208


state 149

  218 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P
  219                  | WHILE . OPEN_P logic_expr error
  220                  | WHILE . logic_expr CLOSE_P
  221                  | WHILE . error logic_expr CLOSE_P

    error       shift, and go to state 209
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 211
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 213
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 150

  239 if_header: IF . OPEN_P logic_expr CLOSE_P
  240          | IF . OPEN_P logic_expr error
  241          | IF . logic_expr CLOSE_P
  242          | IF . error logic_expr CLOSE_P

    error       shift, and go to state 215
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 216
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 217
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 151

  243 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    OPEN_ARR    shift, and go to state 151

    message_call  go to state 219
    sender        go to state 220


state 152

  206 simple_expr: TRUE .

    $default  reduce using rule 206 (simple_expr)


state 153

  207 simple_expr: FALSE .

    $default  reduce using rule 207 (simple_expr)


state 154

  147 return_statement: RETURN . expr SEMI_COMA
  148                 | RETURN . expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 221
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 155

  222 do_while_loop: DO . statement while_loop_header SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 222
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 156

  226 switch: SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  227       | SWITCH . error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  228       | SWITCH . OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  229       | SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  230       | SWITCH . OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

    error   shift, and go to state 223
    OPEN_P  shift, and go to state 224


state 157

  142 statement: variable_declaration .

    $default  reduce using rule 142 (statement)


state 158

  214 simple_expr: p_type . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 225
    message_call  go to state 177


state 159

  146 statement: try_catch .

    $default  reduce using rule 146 (statement)


state 160

  137 statement_list: statement_list . statement
  215 block_body: OPEN_S statement_list . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 226
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 227
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 161

  138 statement_list: statement .

    $default  reduce using rule 138 (statement_list)


state 162

  144 statement: @3 . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 228


state 163

  145 statement: return_statement .

    $default  reduce using rule 145 (statement)


state 164

  139 statement: loop_statement .

    $default  reduce using rule 139 (statement)


state 165

  149 loop_statement: for_loop .

    $default  reduce using rule 149 (loop_statement)


state 166

  152 for_loop: for_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 229
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 167

  141 statement: expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 230


state 168

  183 expr: assign_expr .

    $default  reduce using rule 183 (expr)


state 169

  198 assign_expr: long_id . EQUAL simple_expr
  199 long_id: long_id . DOT IDENTIFIER
  208 simple_expr: long_id .

    EQUAL  shift, and go to state 231
    DOT    shift, and go to state 232

    $default  reduce using rule 208 (simple_expr)


state 170

  184 expr: simple_expr .
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 184 (expr)


state 171

  150 loop_statement: while_loop .

    $default  reduce using rule 150 (loop_statement)


state 172

  217 while_loop: while_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 237
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 173

  151 loop_statement: do_while_loop .

    $default  reduce using rule 151 (loop_statement)


state 174

  140 statement: conditional_statement .

    $default  reduce using rule 140 (statement)


state 175

  225 conditional_statement: switch .

    $default  reduce using rule 225 (conditional_statement)


state 176

  223 conditional_statement: if_header . statement
  224                      | if_header . statement ELSE statement

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 238
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 177

  200 long_id: message_call .

    $default  reduce using rule 200 (long_id)


state 178

  257 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 257 (protocol_body)


state 179

   41 variable_declaration: CONST type IDENTIFIER . SEMI_COMA
   42                     | CONST type IDENTIFIER . error
   43                     | CONST type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER . EQUAL simple_expr error

    error      shift, and go to state 239
    SEMI_COMA  shift, and go to state 240
    EQUAL      shift, and go to state 241


state 180

   51 structrule: STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 242
    VOID        shift, and go to state 59

    variable_declarations  go to state 243
    type                   go to state 244
    simple_type            go to state 73
    complex_type           go to state 74


state 181

   50 Enum: TYPEDEF ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 245


state 182

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   49 Enum: ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 246
    COMMA    shift, and go to state 121


state 183

   38 variable_declaration: type IDENTIFIER error .

    $default  reduce using rule 38 (variable_declaration)


state 184

   37 variable_declaration: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 37 (variable_declaration)


state 185

   39 variable_declaration: type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 247
    message_call  go to state 177


state 186

   61 ArrayOne: type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR . INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    INT_VAL    shift, and go to state 248
    CLOSE_ARR  shift, and go to state 249


state 187

   69 ArrayN: type IDENTIFIER Multi . EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi . SEMI_COMA
   71       | type IDENTIFIER Multi . EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA
   73 Multi: Multi . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 250
    EQUAL      shift, and go to state 251
    OPEN_ARR   shift, and go to state 252


state 188

   23 ids_list: ids_list error IDENTIFIER .

    $default  reduce using rule 23 (ids_list)


state 189

   24 ids_list: ids_list COMMA IDENTIFIER .

    $default  reduce using rule 24 (ids_list)


state 190

   99 p_type: error type CLOSE_P .

    $default  reduce using rule 99 (p_type)


state 191

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 253
    parameter_list  go to state 254
    parameter       go to state 255


state 192

  100 p_type: OPEN_P type error .

    $default  reduce using rule 100 (p_type)


state 193

   98 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 98 (p_type)


state 194

   91 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 91 (class_method_declaration)


state 195

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 90 (class_method_declaration)


state 196

   96 instance_method_declaration: MINUS p_type method_selector error .

    $default  reduce using rule 96 (instance_method_declaration)


state 197

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 94 (instance_method_declaration)


state 198

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 13 (class_interface_body)


state 199

  135 instance_implementation_definition_header: MINUS method_selector @2 MINUS . p_type method_selector

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type  go to state 256


state 200

  110 try_catch: TRY block_body . catch_statment

    CATCH    shift, and go to state 257
    FINALLY  shift, and go to state 258

    catch_statment  go to state 259


state 201

  199 long_id: long_id . DOT IDENTIFIER
  208 simple_expr: long_id .

    DOT  shift, and go to state 232

    $default  reduce using rule 208 (simple_expr)


state 202

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  213            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236


state 203

  156 for_loop_header: FOR error . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  160                | FOR error . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 261

    for_initializer  go to state 262


state 204

  170 for_initializer: IDENTIFIER . EQUAL expr
  171                | IDENTIFIER . expr
  172                | IDENTIFIER . error expr
  173                | IDENTIFIER .

    error       shift, and go to state 263
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    EQUAL       shift, and go to state 264
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    SEMI_COMA  reduce using rule 173 (for_initializer)

    p_type        go to state 158
    expr          go to state 265
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 205

  167 for_initializer: INT . IDENTIFIER EQUAL expr
  168                | INT . IDENTIFIER expr
  169                | INT . IDENTIFIER error expr

    IDENTIFIER  shift, and go to state 266


state 206

  159 for_loop_header: FOR SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 268
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 207

  153 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  157                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr error
  161                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  163                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  164                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  165                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 269

    for_initializer  go to state 270


state 208

  155 for_loop_header: FOR for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 271


state 209

   99 p_type: error . type CLOSE_P
  221 while_loop_header: WHILE error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 272
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 210

  201 long_id: IDENTIFIER .

    $default  reduce using rule 201 (long_id)


state 211

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  180 logic_expr: OPEN_P . logic_expr CLOSE_P
  213 simple_expr: OPEN_P . simple_expr CLOSE_P
  218 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P
  219                  | WHILE OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 273
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 274
    message_call  go to state 177


state 212

  179 logic_expr: NOT_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 275
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 213

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  220 while_loop_header: WHILE logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 276
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 214

  174 logic_expr: expr . LESS_THAN expr
  175           | expr . MORE_THAN expr
  176           | expr . LESS_OR_EQUAL expr
  177           | expr . MORE_OR_EQUAL expr
  178           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 279
    MORE_THAN      shift, and go to state 280
    LESS_OR_EQUAL  shift, and go to state 281
    MORE_OR_EQUAL  shift, and go to state 282
    EQUAL_EQUAL    shift, and go to state 283


state 215

   99 p_type: error . type CLOSE_P
  242 if_header: IF error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 284
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 216

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  180 logic_expr: OPEN_P . logic_expr CLOSE_P
  213 simple_expr: OPEN_P . simple_expr CLOSE_P
  239 if_header: IF OPEN_P . logic_expr CLOSE_P
  240          | IF OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 285
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 274
    message_call  go to state 177


state 217

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  241 if_header: IF logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 286
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 218

  245 sender: IDENTIFIER .

    $default  reduce using rule 245 (sender)


state 219

  244 sender: message_call .

    $default  reduce using rule 244 (sender)


state 220

  243 message_call: OPEN_ARR sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 287

    message  go to state 288


state 221

  147 return_statement: RETURN expr . SEMI_COMA
  148                 | RETURN expr . error

    error      shift, and go to state 289
    SEMI_COMA  shift, and go to state 290


state 222

  222 do_while_loop: DO statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 149

    while_loop_header  go to state 291


state 223

  227 switch: SWITCH error . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type            go to state 158
    logic_expr        go to state 292
    expr              go to state 293
    assign_expr       go to state 168
    long_id           go to state 169
    simple_expr       go to state 170
    switch_statement  go to state 294
    message_call      go to state 177


state 224

  226 switch: SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  228       | SWITCH OPEN_P . switch_statement error OPEN_S switch_body CLOSE_S
  229       | SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body error
  230       | SWITCH OPEN_P . switch_statement CLOSE_P error switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type            go to state 158
    logic_expr        go to state 292
    expr              go to state 293
    assign_expr       go to state 168
    long_id           go to state 169
    simple_expr       go to state 170
    switch_statement  go to state 295
    message_call      go to state 177


state 225

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  214            | p_type simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 214 (simple_expr)


state 226

  215 block_body: OPEN_S statement_list CLOSE_S .

    $default  reduce using rule 215 (block_body)


state 227

  137 statement_list: statement_list statement .

    $default  reduce using rule 137 (statement_list)


state 228

  144 statement: @3 block_body .

    $default  reduce using rule 144 (statement)


state 229

  152 for_loop: for_loop_header statement .

    $default  reduce using rule 152 (for_loop)


state 230

  141 statement: expr SEMI_COMA .

    $default  reduce using rule 141 (statement)


state 231

  198 assign_expr: long_id EQUAL . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 296
    message_call  go to state 177


state 232

  199 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 297


state 233

  209 simple_expr: simple_expr PLUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 298
    message_call  go to state 177


state 234

  210 simple_expr: simple_expr MINUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 299
    message_call  go to state 177


state 235

  211 simple_expr: simple_expr MULTI . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 300
    message_call  go to state 177


state 236

  212 simple_expr: simple_expr DIV . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 301
    message_call  go to state 177


state 237

  217 while_loop: while_loop_header statement .

    $default  reduce using rule 217 (while_loop)


state 238

  223 conditional_statement: if_header statement .
  224                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 302

    $default  reduce using rule 223 (conditional_statement)


state 239

   42 variable_declaration: CONST type IDENTIFIER error .

    $default  reduce using rule 42 (variable_declaration)


state 240

   41 variable_declaration: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 41 (variable_declaration)


state 241

   43 variable_declaration: CONST type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 303
    message_call  go to state 177


state 242

   58 variable_declarations: CONST . type IDENTIFIER SEMI_COMA
   60                      | CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 304
    simple_type   go to state 73
    complex_type  go to state 74


state 243

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S ids_list SEMI_COMA
   54 variable_declarations: variable_declarations . type IDENTIFIER SEMI_COMA
   56                      | variable_declarations . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations . CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations . CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 305
    CONST       shift, and go to state 306
    VOID        shift, and go to state 59

    type          go to state 307
    simple_type   go to state 73
    complex_type  go to state 74


state 244

   53 variable_declarations: type . IDENTIFIER SEMI_COMA
   55                      | type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 308


state 245

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   50 Enum: TYPEDEF ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 309
    COMMA    shift, and go to state 121


state 246

   49 Enum: ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 310


state 247

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr . error
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    error      shift, and go to state 311
    SEMI_COMA  shift, and go to state 312
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 248

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL . CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    CLOSE_ARR  shift, and go to state 313


state 249

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

    EQUAL  shift, and go to state 314


state 250

   70 ArrayN: type IDENTIFIER Multi SEMI_COMA .

    $default  reduce using rule 70 (ArrayN)


state 251

   69 ArrayN: type IDENTIFIER Multi EQUAL . OPEN_S CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL . OPEN_S array_body2 CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 315


state 252

   73 Multi: Multi OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 316


state 253

  109 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 317


state 254

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list .
  104 parameter_list: parameter_list . SEMI_COLUMN parameter
  105               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  106               | parameter_list . IDENTIFIER error parameter
  107               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 318
    SEMI_COLUMN  shift, and go to state 319

    $default  reduce using rule 102 (method_selector)


state 255

  108 parameter_list: parameter .

    $default  reduce using rule 108 (parameter_list)


state 256

  135 instance_implementation_definition_header: MINUS method_selector @2 MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 320


state 257

  111 catch_statment: CATCH . OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment

    OPEN_P  shift, and go to state 321


state 258

  112 catch_statment: FINALLY . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 322


state 259

  110 try_catch: TRY block_body catch_statment .

    $default  reduce using rule 110 (try_catch)


state 260

  213 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 213 (simple_expr)


state 261

  160 for_loop_header: FOR error SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 323
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 262

  156 for_loop_header: FOR error for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 324


state 263

   99 p_type: error . type CLOSE_P
  172 for_initializer: IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    expr          go to state 325
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 264

  170 for_initializer: IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 326
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 265

  171 for_initializer: IDENTIFIER expr .

    $default  reduce using rule 171 (for_initializer)


state 266

  167 for_initializer: INT IDENTIFIER . EQUAL expr
  168                | INT IDENTIFIER . expr
  169                | INT IDENTIFIER . error expr

    error       shift, and go to state 327
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    EQUAL       shift, and go to state 328
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 329
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 267

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  180 logic_expr: OPEN_P . logic_expr CLOSE_P
  213 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 330
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 274
    message_call  go to state 177


state 268

  159 for_loop_header: FOR SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 331
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 269

  157 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr error
  164                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  165                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    SEMI_COMA   shift, and go to state 332
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 333
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 270

  153 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr error
  161                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  163                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 334


state 271

  155 for_loop_header: FOR for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 335
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 272

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  221 while_loop_header: WHILE error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 336
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 273

  180 logic_expr: OPEN_P logic_expr . CLOSE_P
  181           | logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  218 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P
  219                  | WHILE OPEN_P logic_expr . error

    error    shift, and go to state 337
    CLOSE_P  shift, and go to state 338
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 274

  184 expr: simple_expr .
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  213            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236

    $default  reduce using rule 184 (expr)


state 275

  179 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 179 (logic_expr)


state 276

  220 while_loop_header: WHILE logic_expr CLOSE_P .

    $default  reduce using rule 220 (while_loop_header)


state 277

  181 logic_expr: logic_expr AND_AND . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 339
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 278

  182 logic_expr: logic_expr OR_OR . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 340
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 279

  174 logic_expr: expr LESS_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 341
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 280

  175 logic_expr: expr MORE_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 342
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 281

  176 logic_expr: expr LESS_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 343
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 282

  177 logic_expr: expr MORE_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 344
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 283

  178 logic_expr: expr EQUAL_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 345
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 284

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  242 if_header: IF error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 346
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 285

  180 logic_expr: OPEN_P logic_expr . CLOSE_P
  181           | logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  239 if_header: IF OPEN_P logic_expr . CLOSE_P
  240          | IF OPEN_P logic_expr . error

    error    shift, and go to state 347
    CLOSE_P  shift, and go to state 348
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 286

  241 if_header: IF logic_expr CLOSE_P .

    $default  reduce using rule 241 (if_header)


state 287

  246 message: IDENTIFIER .
  247        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 349

    $default  reduce using rule 246 (message)


state 288

  243 message_call: OPEN_ARR sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 350


state 289

  148 return_statement: RETURN expr error .

    $default  reduce using rule 148 (return_statement)


state 290

  147 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 147 (return_statement)


state 291

  222 do_while_loop: DO statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 351


state 292

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  235 switch_statement: logic_expr .

    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278

    $default  reduce using rule 235 (switch_statement)


state 293

  174 logic_expr: expr . LESS_THAN expr
  175           | expr . MORE_THAN expr
  176           | expr . LESS_OR_EQUAL expr
  177           | expr . MORE_OR_EQUAL expr
  178           | expr . EQUAL_EQUAL expr
  236 switch_statement: expr .

    LESS_THAN      shift, and go to state 279
    MORE_THAN      shift, and go to state 280
    LESS_OR_EQUAL  shift, and go to state 281
    MORE_OR_EQUAL  shift, and go to state 282
    EQUAL_EQUAL    shift, and go to state 283

    $default  reduce using rule 236 (switch_statement)


state 294

  227 switch: SWITCH error switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S

    CLOSE_P  shift, and go to state 352


state 295

  226 switch: SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S
  228       | SWITCH OPEN_P switch_statement . error OPEN_S switch_body CLOSE_S
  229       | SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body error
  230       | SWITCH OPEN_P switch_statement . CLOSE_P error switch_body CLOSE_S

    error    shift, and go to state 353
    CLOSE_P  shift, and go to state 354


state 296

  198 assign_expr: long_id EQUAL simple_expr .
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 198 (assign_expr)


state 297

  199 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 199 (long_id)


state 298

  209 simple_expr: simple_expr . PLUS simple_expr
  209            | simple_expr PLUS simple_expr .
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 209 (simple_expr)


state 299

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  210            | simple_expr MINUS simple_expr .
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 210 (simple_expr)


state 300

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  211            | simple_expr MULTI simple_expr .
  212            | simple_expr . DIV simple_expr

    $default  reduce using rule 211 (simple_expr)


state 301

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  212            | simple_expr DIV simple_expr .

    $default  reduce using rule 212 (simple_expr)


state 302

  224 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 355
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 303

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr . error
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    error      shift, and go to state 356
    SEMI_COMA  shift, and go to state 357
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 304

   58 variable_declarations: CONST type . IDENTIFIER SEMI_COMA
   60                      | CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 358


state 305

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 75
    SEMI_COMA   shift, and go to state 359

    ids_list  go to state 360


state 306

   57 variable_declarations: variable_declarations CONST . type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 361
    simple_type   go to state 73
    complex_type  go to state 74


state 307

   54 variable_declarations: variable_declarations type . IDENTIFIER SEMI_COMA
   56                      | variable_declarations type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 362


state 308

   53 variable_declarations: type IDENTIFIER . SEMI_COMA
   55                      | type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 363
    SEMI_COMA    shift, and go to state 364


state 309

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 365


state 310

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 366


state 311

   40 variable_declaration: type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 40 (variable_declaration)


state 312

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 39 (variable_declaration)


state 313

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 367
    EQUAL      shift, and go to state 368
    OPEN_ARR   shift, and go to state 369


state 314

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 370


state 315

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S . CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S . array_body2 CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_S      shift, and go to state 371
    CLOSE_S     shift, and go to state 372
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    array_body2   go to state 373
    p_type        go to state 158
    expr          go to state 374
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 316

   73 Multi: Multi OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 375


state 317

  109 parameter: p_type IDENTIFIER .

    $default  reduce using rule 109 (parameter)


state 318

  105 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter
  106               | parameter_list IDENTIFIER . error parameter
  107               | parameter_list IDENTIFIER . parameter

    error        shift, and go to state 376
    SEMI_COLUMN  shift, and go to state 377
    OPEN_P       shift, and go to state 79

    p_type     go to state 253
    parameter  go to state 378


state 319

  104 parameter_list: parameter_list SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 253
    parameter  go to state 379


state 320

  135 instance_implementation_definition_header: MINUS method_selector @2 MINUS p_type method_selector .

    $default  reduce using rule 135 (instance_implementation_definition_header)


state 321

  111 catch_statment: CATCH OPEN_P . NSEXception Exception_type CLOSE_P block_body catch_statment

    NSEXception  shift, and go to state 380


state 322

  112 catch_statment: FINALLY block_body .

    $default  reduce using rule 112 (catch_statment)


state 323

  160 for_loop_header: FOR error SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 381
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 324

  156 for_loop_header: FOR error for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 382
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 325

  172 for_initializer: IDENTIFIER error expr .

    $default  reduce using rule 172 (for_initializer)


state 326

  170 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 170 (for_initializer)


state 327

   99 p_type: error . type CLOSE_P
  169 for_initializer: INT IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    expr          go to state 383
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 328

  167 for_initializer: INT IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 384
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 329

  168 for_initializer: INT IDENTIFIER expr .

    $default  reduce using rule 168 (for_initializer)


state 330

  180 logic_expr: OPEN_P logic_expr . CLOSE_P
  181           | logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 385
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 331

  159 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 386
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 332

  165 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  166                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    CLOSE_P     shift, and go to state 387
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 388
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 333

  157 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr error
  164                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 389
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 334

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr error
  161                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  163                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    SEMI_COMA   shift, and go to state 390
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 391
    expr          go to state 214
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 335

  155 for_loop_header: FOR for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 392
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 336

  221 while_loop_header: WHILE error logic_expr CLOSE_P .

    $default  reduce using rule 221 (while_loop_header)


state 337

  219 while_loop_header: WHILE OPEN_P logic_expr error .

    $default  reduce using rule 219 (while_loop_header)


state 338

  180 logic_expr: OPEN_P logic_expr CLOSE_P .
  218 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 180 (logic_expr)
    AND_AND   reduce using rule 180 (logic_expr)
    OR_OR     reduce using rule 180 (logic_expr)
    $default  reduce using rule 218 (while_loop_header)


state 339

  181 logic_expr: logic_expr . AND_AND logic_expr
  181           | logic_expr AND_AND logic_expr .
  182           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 181 (logic_expr)


state 340

  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr
  182           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 182 (logic_expr)


state 341

  174 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 174 (logic_expr)


state 342

  175 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 175 (logic_expr)


state 343

  176 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 176 (logic_expr)


state 344

  177 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 177 (logic_expr)


state 345

  178 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 178 (logic_expr)


state 346

  242 if_header: IF error logic_expr CLOSE_P .

    $default  reduce using rule 242 (if_header)


state 347

  240 if_header: IF OPEN_P logic_expr error .

    $default  reduce using rule 240 (if_header)


state 348

  180 logic_expr: OPEN_P logic_expr CLOSE_P .
  239 if_header: IF OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 180 (logic_expr)
    AND_AND   reduce using rule 180 (logic_expr)
    OR_OR     reduce using rule 180 (logic_expr)
    $default  reduce using rule 239 (if_header)


state 349

  247 message: IDENTIFIER SEMI_COLUMN . argument_list

    error        shift, and go to state 393
    IDENTIFIER   shift, and go to state 394
    SEMI_COLUMN  shift, and go to state 395

    argument_list  go to state 396
    argument       go to state 397


state 350

  243 message_call: OPEN_ARR sender message CLOSE_ARR .

    $default  reduce using rule 243 (message_call)


state 351

  222 do_while_loop: DO statement while_loop_header SEMI_COMA .

    $default  reduce using rule 222 (do_while_loop)


state 352

  227 switch: SWITCH error switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 398


state 353

  228 switch: SWITCH OPEN_P switch_statement error . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 399


state 354

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S
  229       | SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body error
  230       | SWITCH OPEN_P switch_statement CLOSE_P . error switch_body CLOSE_S

    error   shift, and go to state 400
    OPEN_S  shift, and go to state 401


state 355

  224 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 224 (conditional_statement)


state 356

   44 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 44 (variable_declaration)


state 357

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 43 (variable_declaration)


state 358

   58 variable_declarations: CONST type IDENTIFIER . SEMI_COMA
   60                      | CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 402
    SEMI_COMA    shift, and go to state 403


state 359

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA .

    $default  reduce using rule 51 (structrule)


state 360

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list . SEMI_COMA

    error      shift, and go to state 120
    SEMI_COMA  shift, and go to state 404
    COMMA      shift, and go to state 121


state 361

   57 variable_declarations: variable_declarations CONST type . IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 405


state 362

   54 variable_declarations: variable_declarations type IDENTIFIER . SEMI_COMA
   56                      | variable_declarations type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 406
    SEMI_COMA    shift, and go to state 407


state 363

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 408
    message_call  go to state 177


state 364

   53 variable_declarations: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 53 (variable_declarations)


state 365

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 409


state 366

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 49 (Enum)


state 367

   62 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA .

    $default  reduce using rule 62 (ArrayOne)


state 368

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 410


state 369

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 411


state 370

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 412
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    array_body    go to state 413
    p_type        go to state 158
    expr          go to state 414
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 371

   74 array_body2: OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 412
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    array_body    go to state 415
    p_type        go to state 158
    expr          go to state 414
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 372

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 416


state 373

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 . CLOSE_S SEMI_COMA
   76 array_body2: array_body2 . COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 . COMMA expr

    CLOSE_S  shift, and go to state 417
    COMMA    shift, and go to state 418


state 374

   75 array_body2: expr .

    $default  reduce using rule 75 (array_body2)


state 375

   73 Multi: Multi OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 73 (Multi)


state 376

   99 p_type: error . type CLOSE_P
  106 parameter_list: parameter_list IDENTIFIER error . parameter

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 79

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 253
    parameter     go to state 419


state 377

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 253
    parameter  go to state 420


state 378

  107 parameter_list: parameter_list IDENTIFIER parameter .

    $default  reduce using rule 107 (parameter_list)


state 379

  104 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 104 (parameter_list)


state 380

  111 catch_statment: CATCH OPEN_P NSEXception . Exception_type CLOSE_P block_body catch_statment

    NUllPointerException   shift, and go to state 421
    OUtOfBoundryException  shift, and go to state 422
    CAstException          shift, and go to state 423

    Exception_type  go to state 424


state 381

  160 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 425
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 382

  156 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 426
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 383

  169 for_initializer: INT IDENTIFIER error expr .

    $default  reduce using rule 169 (for_initializer)


state 384

  167 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 167 (for_initializer)


state 385

  180 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 180 (logic_expr)


state 386

  159 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 427


state 387

  166 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 166 (for_loop_header)


state 388

  165 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 428


state 389

  157 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  158                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr error
  164                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    CLOSE_P     shift, and go to state 429
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 430
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 390

  161 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  163                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    CLOSE_P     shift, and go to state 431
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 432
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 391

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr error
  162                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  181 logic_expr: logic_expr . AND_AND logic_expr
  182           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 433
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 392

  155 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 434
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 393

  251 argument: error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 435
    message_call  go to state 177


state 394

  252 argument: IDENTIFIER . SEMI_COLUMN simple_expr
  253         | IDENTIFIER . simple_expr
  254         | IDENTIFIER . error simple_expr

    error        shift, and go to state 436
    IDENTIFIER   shift, and go to state 210
    SEMI_COLUMN  shift, and go to state 437
    OPEN_P       shift, and go to state 143
    STRING_VAL   shift, and go to state 144
    FLOAT_VAL    shift, and go to state 145
    CHAR_VAL     shift, and go to state 146
    INT_VAL      shift, and go to state 147
    OPEN_ARR     shift, and go to state 151
    TRUE         shift, and go to state 152
    FALSE        shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 438
    message_call  go to state 177


state 395

  250 argument: SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 439
    message_call  go to state 177


state 396

  247 message: IDENTIFIER SEMI_COLUMN argument_list .
  248 argument_list: argument_list . argument

    error        shift, and go to state 393
    IDENTIFIER   shift, and go to state 394
    SEMI_COLUMN  shift, and go to state 395

    CLOSE_ARR  reduce using rule 247 (message)

    argument  go to state 440


state 397

  249 argument_list: argument .

    $default  reduce using rule 249 (argument_list)


state 398

  227 switch: SWITCH error switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 443


state 399

  228 switch: SWITCH OPEN_P switch_statement error OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 444


state 400

  230 switch: SWITCH OPEN_P switch_statement CLOSE_P error . switch_body CLOSE_S

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 445


state 401

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S
  229       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body error

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 446


state 402

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 447
    message_call  go to state 177


state 403

   58 variable_declarations: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 58 (variable_declarations)


state 404

   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA .

    $default  reduce using rule 52 (structrule)


state 405

   57 variable_declarations: variable_declarations CONST type IDENTIFIER . SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 448
    SEMI_COMA    shift, and go to state 449


state 406

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 450
    message_call  go to state 177


state 407

   54 variable_declarations: variable_declarations type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 54 (variable_declarations)


state 408

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 451
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 409

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 50 (Enum)


state 410

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    CLOSE_S     shift, and go to state 452
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 412
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    array_body    go to state 453
    p_type        go to state 158
    expr          go to state 414
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 411

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 454


state 412

   68 array_body: OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  243 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    INT_VAL     shift, and go to state 455
    OPEN_ARR    shift, and go to state 151

    message_call  go to state 219
    sender        go to state 220


state 413

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 456
    COMMA    shift, and go to state 457


state 414

   66 array_body: expr .

    $default  reduce using rule 66 (array_body)


state 415

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   74 array_body2: OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 458
    COMMA    shift, and go to state 457


state 416

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 69 (ArrayN)


state 417

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 459


state 418

   76 array_body2: array_body2 COMMA . OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_S      shift, and go to state 460
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 461
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 419

  106 parameter_list: parameter_list IDENTIFIER error parameter .

    $default  reduce using rule 106 (parameter_list)


state 420

  105 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 105 (parameter_list)


state 421

  113 Exception_type: NUllPointerException .

    $default  reduce using rule 113 (Exception_type)


state 422

  114 Exception_type: OUtOfBoundryException .

    $default  reduce using rule 114 (Exception_type)


state 423

  115 Exception_type: CAstException .

    $default  reduce using rule 115 (Exception_type)


state 424

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type . CLOSE_P block_body catch_statment

    CLOSE_P  shift, and go to state 462


state 425

  160 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 463


state 426

  156 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 464
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 427

  159 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 159 (for_loop_header)


state 428

  165 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 165 (for_loop_header)


state 429

  164 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 164 (for_loop_header)


state 430

  157 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  158                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 465
    CLOSE_P  shift, and go to state 466


state 431

  163 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 163 (for_loop_header)


state 432

  161 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 467


state 433

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  154                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr error
  162                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    CLOSE_P     shift, and go to state 468
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 469
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 434

  155 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 470


state 435

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  251 argument: error simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 251 (argument)


state 436

   99 p_type: error . type CLOSE_P
  254 argument: IDENTIFIER error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 471
    message_call  go to state 177


state 437

  252 argument: IDENTIFIER SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 472
    message_call  go to state 177


state 438

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  253 argument: IDENTIFIER simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 253 (argument)


state 439

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  250 argument: SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 250 (argument)


state 440

  248 argument_list: argument_list argument .

    $default  reduce using rule 248 (argument_list)


state 441

  233 switch_body: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  234            | DEFAULT . SEMI_COLUMN statement error SEMI_COMA

    SEMI_COLUMN  shift, and go to state 473


state 442

  231 switch_body: CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  232            | CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    OPEN_P  shift, and go to state 474


state 443

  227 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 475


state 444

  228 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 476


state 445

  230 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 477


state 446

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S
  229       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . error

    error    shift, and go to state 478
    CLOSE_S  shift, and go to state 479


state 447

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 480
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 448

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 201
    simple_expr   go to state 481
    message_call  go to state 177


state 449

   57 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 57 (variable_declarations)


state 450

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 482
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 451

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 55 (variable_declarations)


state 452

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 483


state 453

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 484
    COMMA    shift, and go to state 457


state 454

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 72 (Multi)


state 455

   68 array_body: OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 485


state 456

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 486


state 457

   65 array_body: array_body COMMA . expr
   67           | array_body COMMA . OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 487
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 488
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 458

   74 array_body2: OPEN_S array_body CLOSE_S .

    $default  reduce using rule 74 (array_body2)


state 459

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (ArrayN)


state 460

   76 array_body2: array_body2 COMMA OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 412
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    array_body    go to state 489
    p_type        go to state 158
    expr          go to state 414
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 461

   77 array_body2: array_body2 COMMA expr .

    $default  reduce using rule 77 (array_body2)


state 462

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 490


state 463

  160 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 160 (for_loop_header)


state 464

  156 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 491


state 465

  158 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 158 (for_loop_header)


state 466

  157 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 157 (for_loop_header)


state 467

  161 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 161 (for_loop_header)


state 468

  162 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 162 (for_loop_header)


state 469

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  154                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 492
    CLOSE_P  shift, and go to state 493


state 470

  155 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 155 (for_loop_header)


state 471

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  254 argument: IDENTIFIER error simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 254 (argument)


state 472

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  252 argument: IDENTIFIER SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 252 (argument)


state 473

  233 switch_body: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  234            | DEFAULT SEMI_COLUMN . statement error SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 494
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 474

  231 switch_body: CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    error       shift, and go to state 495
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 496
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 497
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type          go to state 158
    logic_expr2     go to state 498
    expr2           go to state 499
    long_id         go to state 201
    simple_expr     go to state 500
    case_statement  go to state 501
    message_call    go to state 177


state 475

  227 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 227 (switch)


state 476

  228 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 228 (switch)


state 477

  230 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S .

    $default  reduce using rule 230 (switch)


state 478

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error .

    $default  reduce using rule 229 (switch)


state 479

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 226 (switch)


state 480

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 60 (variable_declarations)


state 481

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 502
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 482

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 56 (variable_declarations)


state 483

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 61 (ArrayOne)


state 484

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 503


state 485

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 504


state 486

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 64 (ArrayOne)


state 487

   67 array_body: array_body COMMA OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  243 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    INT_VAL     shift, and go to state 505
    OPEN_ARR    shift, and go to state 151

    message_call  go to state 219
    sender        go to state 220


state 488

   65 array_body: array_body COMMA expr .

    $default  reduce using rule 65 (array_body)


state 489

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   76 array_body2: array_body2 COMMA OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 506
    COMMA    shift, and go to state 457


state 490

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body . catch_statment

    CATCH    shift, and go to state 257
    FINALLY  shift, and go to state 258

    catch_statment  go to state 507


state 491

  156 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 156 (for_loop_header)


state 492

  154 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 154 (for_loop_header)


state 493

  153 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 153 (for_loop_header)


state 494

  233 switch_body: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  234            | DEFAULT SEMI_COLUMN statement . error SEMI_COMA

    error  shift, and go to state 508
    BREAK  shift, and go to state 509


state 495

   99 p_type: error . type CLOSE_P
  194 logic_expr2: error . expr2
  196            | error . logic_expr2 CLOSE_P

    error       shift, and go to state 495
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 496
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 497
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr2   go to state 510
    expr2         go to state 511
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 496

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  191 logic_expr2: OPEN_P . logic_expr2 CLOSE_P
  195            | OPEN_P . logic_expr2 error
  213 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 495
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 496
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 497
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr2   go to state 512
    expr2         go to state 513
    long_id       go to state 201
    simple_expr   go to state 514
    message_call  go to state 177


state 497

  190 logic_expr2: NOT_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 515
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 498

  192 logic_expr2: logic_expr2 . AND_AND logic_expr2
  193            | logic_expr2 . OR_OR logic_expr2
  237 case_statement: logic_expr2 .

    AND_AND  shift, and go to state 516
    OR_OR    shift, and go to state 517

    $default  reduce using rule 237 (case_statement)


state 499

  185 logic_expr2: expr2 . LESS_THAN expr2
  186            | expr2 . MORE_THAN expr2
  187            | expr2 . LESS_OR_EQUAL expr2
  188            | expr2 . MORE_OR_EQUAL expr2
  189            | expr2 . EQUAL_EQUAL expr2
  238 case_statement: expr2 .

    LESS_THAN      shift, and go to state 518
    MORE_THAN      shift, and go to state 519
    LESS_OR_EQUAL  shift, and go to state 520
    MORE_OR_EQUAL  shift, and go to state 521
    EQUAL_EQUAL    shift, and go to state 522

    $default  reduce using rule 238 (case_statement)


state 500

  197 expr2: simple_expr .
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 197 (expr2)


state 501

  231 switch_body: CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    CLOSE_P  shift, and go to state 523


state 502

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 59 (variable_declarations)


state 503

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 63 (ArrayOne)


state 504

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 524
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 505

   67 array_body: array_body COMMA OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 525


state 506

   76 array_body2: array_body2 COMMA OPEN_S array_body CLOSE_S .

    $default  reduce using rule 76 (array_body2)


state 507

  111 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment .

    $default  reduce using rule 111 (catch_statment)


state 508

  234 switch_body: DEFAULT SEMI_COLUMN statement error . SEMI_COMA

    SEMI_COMA  shift, and go to state 526


state 509

  233 switch_body: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 527


state 510

  192 logic_expr2: logic_expr2 . AND_AND logic_expr2
  193            | logic_expr2 . OR_OR logic_expr2
  196            | error logic_expr2 . CLOSE_P

    CLOSE_P  shift, and go to state 528
    AND_AND  shift, and go to state 516
    OR_OR    shift, and go to state 517


state 511

  185 logic_expr2: expr2 . LESS_THAN expr2
  186            | expr2 . MORE_THAN expr2
  187            | expr2 . LESS_OR_EQUAL expr2
  188            | expr2 . MORE_OR_EQUAL expr2
  189            | expr2 . EQUAL_EQUAL expr2
  194            | error expr2 .

    LESS_THAN      shift, and go to state 518
    MORE_THAN      shift, and go to state 519
    LESS_OR_EQUAL  shift, and go to state 520
    MORE_OR_EQUAL  shift, and go to state 521
    EQUAL_EQUAL    shift, and go to state 522

    $default  reduce using rule 194 (logic_expr2)


state 512

  191 logic_expr2: OPEN_P logic_expr2 . CLOSE_P
  192            | logic_expr2 . AND_AND logic_expr2
  193            | logic_expr2 . OR_OR logic_expr2
  195            | OPEN_P logic_expr2 . error

    error    shift, and go to state 529
    CLOSE_P  shift, and go to state 530
    AND_AND  shift, and go to state 516
    OR_OR    shift, and go to state 517


state 513

  185 logic_expr2: expr2 . LESS_THAN expr2
  186            | expr2 . MORE_THAN expr2
  187            | expr2 . LESS_OR_EQUAL expr2
  188            | expr2 . MORE_OR_EQUAL expr2
  189            | expr2 . EQUAL_EQUAL expr2

    LESS_THAN      shift, and go to state 518
    MORE_THAN      shift, and go to state 519
    LESS_OR_EQUAL  shift, and go to state 520
    MORE_OR_EQUAL  shift, and go to state 521
    EQUAL_EQUAL    shift, and go to state 522


state 514

  197 expr2: simple_expr .
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  213            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236

    $default  reduce using rule 197 (expr2)


state 515

  190 logic_expr2: NOT_EQUAL expr2 .

    $default  reduce using rule 190 (logic_expr2)


state 516

  192 logic_expr2: logic_expr2 AND_AND . logic_expr2

    error       shift, and go to state 495
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 496
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 497
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr2   go to state 531
    expr2         go to state 513
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 517

  193 logic_expr2: logic_expr2 OR_OR . logic_expr2

    error       shift, and go to state 495
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 496
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    NOT_EQUAL   shift, and go to state 497
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    logic_expr2   go to state 532
    expr2         go to state 513
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 518

  185 logic_expr2: expr2 LESS_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 533
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 519

  186 logic_expr2: expr2 MORE_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 534
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 520

  187 logic_expr2: expr2 LESS_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 535
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 521

  188 logic_expr2: expr2 MORE_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 536
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 522

  189 logic_expr2: expr2 EQUAL_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 537
    long_id       go to state 201
    simple_expr   go to state 500
    message_call  go to state 177


state 523

  231 switch_body: CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement error SEMI_COMA switch_body

    SEMI_COLUMN  shift, and go to state 538


state 524

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 68 (array_body)


state 525

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 539


state 526

  234 switch_body: DEFAULT SEMI_COLUMN statement error SEMI_COMA .

    $default  reduce using rule 234 (switch_body)


state 527

  233 switch_body: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 233 (switch_body)


state 528

  196 logic_expr2: error logic_expr2 CLOSE_P .

    $default  reduce using rule 196 (logic_expr2)


state 529

  195 logic_expr2: OPEN_P logic_expr2 error .

    $default  reduce using rule 195 (logic_expr2)


state 530

  191 logic_expr2: OPEN_P logic_expr2 CLOSE_P .

    $default  reduce using rule 191 (logic_expr2)


state 531

  192 logic_expr2: logic_expr2 . AND_AND logic_expr2
  192            | logic_expr2 AND_AND logic_expr2 .
  193            | logic_expr2 . OR_OR logic_expr2

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 192 (logic_expr2)


state 532

  192 logic_expr2: logic_expr2 . AND_AND logic_expr2
  193            | logic_expr2 . OR_OR logic_expr2
  193            | logic_expr2 OR_OR logic_expr2 .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 193 (logic_expr2)


state 533

  185 logic_expr2: expr2 LESS_THAN expr2 .

    $default  reduce using rule 185 (logic_expr2)


state 534

  186 logic_expr2: expr2 MORE_THAN expr2 .

    $default  reduce using rule 186 (logic_expr2)


state 535

  187 logic_expr2: expr2 LESS_OR_EQUAL expr2 .

    $default  reduce using rule 187 (logic_expr2)


state 536

  188 logic_expr2: expr2 MORE_OR_EQUAL expr2 .

    $default  reduce using rule 188 (logic_expr2)


state 537

  189 logic_expr2: expr2 EQUAL_EQUAL expr2 .

    $default  reduce using rule 189 (logic_expr2)


state 538

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement error SEMI_COMA switch_body

    error       shift, and go to state 77
    TRY         shift, and go to state 140
    IDENTIFIER  shift, and go to state 141
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    FOR         shift, and go to state 148
    WHILE       shift, and go to state 149
    IF          shift, and go to state 150
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 143 (@3)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 540
    @3                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 539

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 143
    STRING_VAL  shift, and go to state 144
    FLOAT_VAL   shift, and go to state 145
    CHAR_VAL    shift, and go to state 146
    INT_VAL     shift, and go to state 147
    OPEN_ARR    shift, and go to state 151
    TRUE        shift, and go to state 152
    FALSE       shift, and go to state 153

    p_type        go to state 158
    expr          go to state 541
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 540

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . BREAK SEMI_COMA switch_body
  232            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . error SEMI_COMA switch_body

    error  shift, and go to state 542
    BREAK  shift, and go to state 543


state 541

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 67 (array_body)


state 542

  232 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 544


state 543

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 545


state 544

  232 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 546


state 545

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 441
    CASE     shift, and go to state 442

    switch_body  go to state 547


state 546

  232 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body .

    $default  reduce using rule 232 (switch_body)


state 547

  231 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body .

    $default  reduce using rule 231 (switch_body)
