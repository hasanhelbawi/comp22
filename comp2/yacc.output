Terminals which are not used

   ID
   TRUE
   FALSE
   SYMBOL
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol

    7 class_interface: class_interface_header class_interface_body

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables AT_END
   15                     | protocol_reference_list interface_declaration_list AT_END
   16                     | instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list AT_END
   18                     | instance_variables AT_END
   19                     | interface_declaration_list AT_END
   20                     | AT_END

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN

   22 ids_list: IDENTIFIER
   23         | ids_list error IDENTIFIER
   24         | ids_list COMMA IDENTIFIER

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   26                   | OPEN_S instance_variable_declarations error
   27                   | OPEN_S instance_variable_declarations

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   29                               | instance_variable_declaration
   30                               | variable_declaration_list

   31 instance_variable_declaration: visibility_specification variable_declaration_list

   32 variable_declaration_list: variable_declaration_list variable_declaration
   33                          | variable_declaration

   34 visibility_specification: AT_PRIVATE
   35                         | AT_PROTECTED
   36                         | AT_PUBLIC

   37 variable_declaration: type IDENTIFIER SEMI_COMA
   38                     | type IDENTIFIER error
   39                     | type IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr error
   41                     | CONST type IDENTIFIER SEMI_COMA
   42                     | CONST type IDENTIFIER error
   43                     | CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr error
   45                     | Enum
   46                     | structrule
   47                     | ArrayOne
   48                     | ArrayN

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA
   50     | TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

   53 variable_declarations: type IDENTIFIER SEMI_COMA
   54                      | variable_declarations type IDENTIFIER SEMI_COMA
   55                      | type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   56                      | variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations CONST type IDENTIFIER SEMI_COMA
   58                      | CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   60                      | CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

   65 array_body: array_body COMMA expr
   66           | expr
   67           | array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   68           | OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR
   73      | Multi OPEN_ARR INT_VAL CLOSE_ARR

   74 array_body2: OPEN_S array_body CLOSE_S
   75            | expr
   76            | array_body2 COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA expr

   78 type: simple_type
   79     | complex_type

   80 simple_type: INT
   81            | CHAR
   82            | FLOAT
   83            | NSSTRING
   84            | VOID

   85 complex_type: IDENTIFIER MULTI

   86 interface_declaration_list: interface_declaration_list interface_declaration
   87                           | interface_declaration

   88 interface_declaration: class_method_declaration
   89                      | instance_method_declaration

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA
   91                         | PLUS p_type method_selector error
   92                         | PLUS method_selector SEMI_COMA
   93                         | PLUS method_selector error

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
   95                            | MINUS method_selector SEMI_COMA
   96                            | MINUS p_type method_selector error
   97                            | MINUS method_selector error

   98 p_type: OPEN_P type CLOSE_P
   99       | error type CLOSE_P
  100       | OPEN_P type error

  101 @1: /* empty */

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list

  103 @2: /* empty */

  104 @3: /* empty */

  105 method_selector: IDENTIFIER @2 IDENTIFIER SEMI_COLUMN @3 parameter_list
  106                | IDENTIFIER

  107 parameter_list: parameter_list SEMI_COLUMN parameter
  108               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  109               | parameter_list IDENTIFIER error parameter
  110               | parameter_list IDENTIFIER parameter
  111               | parameter

  112 parameter: p_type IDENTIFIER

  113 try_catch: TRY block_body catch_statment

  114 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment
  115               | FINALLY block_body

  116 Exception_type: NUllPointerException
  117               | OUtOfBoundryException
  118               | CAstException

  119 class_implementation: class_implementation_header class_implementation_body

  120 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  121                            | AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER
  122                            | AT_IMPLEMENTATION IDENTIFIER IDENTIFIER
  123                            | AT_IMPLEMENTATION IDENTIFIER

  124 class_implementation_body: instance_variables implementation_definition_list AT_END
  125                          | instance_variables AT_END
  126                          | implementation_definition_list AT_END

  127 implementation_definition_list: implementation_definition_list implementation_definition
  128                               | implementation_definition

  129 implementation_definition: class_implementation_definition
  130                          | instance_implementation_definition

  131 class_implementation_definition: class_implementation_definition_header block_body

  132 class_implementation_definition_header: PLUS p_type method_selector

  133 @4: /* empty */

  134 class_implementation_definition_header: PLUS method_selector @4 PLUS p_type method_selector
  135                                       | PLUS method_selector

  136 instance_implementation_definition: instance_implementation_definition_header block_body

  137 instance_implementation_definition_header: MINUS p_type method_selector

  138 @5: /* empty */

  139 instance_implementation_definition_header: MINUS method_selector @5 MINUS p_type method_selector
  140                                          | MINUS method_selector

  141 statement_list: statement_list statement
  142               | statement

  143 statement: loop_statement
  144          | conditional_statement
  145          | expr SEMI_COMA
  146          | variable_declaration

  147 @6: /* empty */

  148 statement: @6 block_body
  149          | return_statement
  150          | try_catch

  151 return_statement: RETURN expr SEMI_COMA
  152                 | RETURN expr error

  153 loop_statement: for_loop
  154               | while_loop
  155               | do_while_loop

  156 for_loop: for_loop_header statement

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  159                | FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  160                | FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  161                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  163                | FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  164                | FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  165                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  167                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  168                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  169                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  170                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  171 for_initializer: INT IDENTIFIER EQUAL expr
  172                | INT IDENTIFIER expr
  173                | INT IDENTIFIER error expr
  174                | IDENTIFIER EQUAL expr
  175                | IDENTIFIER expr
  176                | IDENTIFIER error expr
  177                | IDENTIFIER

  178 logic_expr: expr LESS_THAN expr
  179           | expr MORE_THAN expr
  180           | expr LESS_OR_EQUAL expr
  181           | expr MORE_OR_EQUAL expr
  182           | expr EQUAL_EQUAL expr
  183           | NOT_EQUAL expr
  184           | OPEN_P logic_expr CLOSE_P
  185           | logic_expr AND_AND logic_expr
  186           | logic_expr OR_OR logic_expr

  187 expr: assign_expr
  188     | simple_expr

  189 logic_expr2: expr2 LESS_THAN expr2
  190            | expr2 MORE_THAN expr2
  191            | expr2 LESS_OR_EQUAL expr2
  192            | expr2 MORE_OR_EQUAL expr2
  193            | expr2 EQUAL_EQUAL expr2
  194            | NOT_EQUAL expr2
  195            | OPEN_P logic_expr2 CLOSE_P
  196            | logic_expr2 AND_AND logic_expr2
  197            | logic_expr2 OR_OR logic_expr2
  198            | error expr2
  199            | OPEN_P logic_expr2 error
  200            | error logic_expr2 CLOSE_P

  201 expr2: simple_expr

  202 assign_expr: long_id EQUAL simple_expr

  203 long_id: long_id DOT IDENTIFIER
  204        | message_call
  205        | IDENTIFIER

  206 simple_expr: STRING_VAL
  207            | INT_VAL

  208 @7: /* empty */

  209 simple_expr: FLOAT_VAL @7 STRING_VAL
  210            | CHAR_VAL
  211            | long_id
  212            | simple_expr PLUS simple_expr
  213            | simple_expr MINUS simple_expr
  214            | simple_expr MULTI simple_expr
  215            | simple_expr DIV simple_expr
  216            | OPEN_P simple_expr CLOSE_P
  217            | p_type simple_expr

  218 block_body: OPEN_S statement_list CLOSE_S
  219           | OPEN_S CLOSE_S

  220 while_loop: while_loop_header statement

  221 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P
  222                  | WHILE OPEN_P logic_expr error
  223                  | WHILE logic_expr CLOSE_P
  224                  | WHILE error logic_expr CLOSE_P

  225 do_while_loop: DO statement while_loop_header SEMI_COMA

  226 conditional_statement: if_header statement
  227                      | if_header statement ELSE statement
  228                      | switch

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  230       | SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  231       | SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  232       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  233       | SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body
  236            | DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  237            | DEFAULT SEMI_COLUMN statement error SEMI_COMA

  238 switch_statement: logic_expr
  239                 | expr

  240 case_statement: logic_expr2
  241               | expr2

  242 if_header: IF OPEN_P logic_expr CLOSE_P
  243          | IF OPEN_P logic_expr error
  244          | IF logic_expr CLOSE_P
  245          | IF error logic_expr CLOSE_P

  246 message_call: OPEN_ARR sender message CLOSE_ARR

  247 sender: message_call
  248       | IDENTIFIER

  249 message: IDENTIFIER
  250        | IDENTIFIER SEMI_COLUMN argument_list

  251 argument_list: argument_list argument
  252              | argument

  253 argument: SEMI_COLUMN simple_expr
  254         | error simple_expr
  255         | IDENTIFIER SEMI_COLUMN simple_expr
  256         | IDENTIFIER simple_expr
  257         | IDENTIFIER error simple_expr

  258 protocol: protocol_header protocol_body

  259 protocol_header: AT_PROTOCOL IDENTIFIER

  260 protocol_body: protocol_reference_list interface_declaration_list AT_END
  261              | interface_declaration_list AT_END
  262              | protocol_reference_list AT_END
  263              | AT_END


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 26 38 40 42 44 91 93 96 97 99 100 109 121 152 158
    160 162 164 173 176 198 199 200 222 224 230 231 232 233 235 237
    243 245 254 257
TRY (258) 113
CATCH (259) 114
NSEXception (260) 114
NUllPointerException (261) 116
OUtOfBoundryException (262) 117
CAstException (263) 118
FINALLY (264) 115
AT_INTERFACE (265) 8 9 10 11 12
IDENTIFIER (266) 8 9 10 11 12 22 23 24 37 38 39 40 41 42 43 44 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 71 85 102 105 106
    108 109 110 112 120 121 122 123 171 172 173 174 175 176 177 203
    205 248 249 250 255 256 257 259
SEMI_COLUMN (267) 8 10 55 56 59 60 102 105 107 108 120 234 235 236
    237 250 253 255
NSSTRING (268) 83
FLOAT (269) 82
CHAR (270) 81
INT (271) 80 171 172 173
SEMI_COMA (272) 37 39 41 43 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 69 70 71 90 92 94 95 145 151 157 158 159 160 161 162 163
    164 165 166 167 168 169 170 225 234 235 236 237
ID (273)
AT_PUBLIC (274) 36
AT_PROTECTED (275) 35
AT_PRIVATE (276) 34
OPEN_S (277) 25 26 27 49 50 51 52 61 63 64 69 71 74 76 218 219 229
    230 231 232
CLOSE_S (278) 25 49 50 51 52 61 63 64 69 71 74 76 218 219 229 230 231
    233
COMMA (279) 24 65 67 76 77
LESS_THAN (280) 21 178 189
MORE_THAN (281) 21 179 190
AT_END (282) 13 14 15 16 17 18 19 20 124 125 126 260 261 262 263
CONST (283) 41 42 43 44 57 58 59 60
VOID (284) 84
PLUS (285) 90 91 92 93 132 134 135 212
MINUS (286) 94 95 96 97 137 139 140 213
OPEN_P (287) 98 100 114 157 158 161 162 165 166 167 168 169 170 184
    195 199 216 221 222 229 231 232 233 234 235 242 243
CLOSE_P (288) 98 99 114 157 159 160 161 163 164 165 166 167 168 169
    170 184 195 200 216 221 223 224 229 230 232 233 234 235 242 244
    245
AT_IMPLEMENTATION (289) 120 121 122 123
AND_AND (290) 185 196
OR_OR (291) 186 197
STRING_VAL (292) 206 209
FLOAT_VAL (293) 209
LESS_OR_EQUAL (294) 180 191
CHAR_VAL (295) 210
INT_VAL (296) 61 62 63 67 68 72 73 207
MORE_OR_EQUAL (297) 181 192
MULTI (298) 85 214
EQUAL_EQUAL (299) 182 193
NOT_EQUAL (300) 183 194
FOR (301) 157 158 159 160 161 162 163 164 165 166 167 168 169 170
EQUAL (302) 39 40 43 44 61 63 64 67 68 69 71 171 174 202
DIV (303) 215
WHILE (304) 221 222 223 224
IF (305) 242 243 244 245
OPEN_ARR (306) 61 62 63 64 67 68 72 73 246
CLOSE_ARR (307) 61 62 63 64 67 68 72 73 246
TRUE (308)
FALSE (309)
RETURN (310) 151 152
AT_PROTOCOL (311) 259
DO (312) 225
DOT (313) 203
SYMBOL (314)
SWITCH (315) 229 230 231 232 233
BREAK (316) 234 236
DEFAULT (317) 236 237
CASE (318) 234 235
STRUCT (319) 51 52
TYPEDEF (320) 50
ENUM (321) 49 50
if_h (322)
ELSE (323) 227
expr_1 (324)
p_type_expr_prec (325)
long_id_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6, on right: 2 3
class_interface (76)
    on left: 7, on right: 4
class_interface_header (77)
    on left: 8 9 10 11 12, on right: 7
class_interface_body (78)
    on left: 13 14 15 16 17 18 19 20, on right: 7
protocol_reference_list (79)
    on left: 21, on right: 13 14 15 17 260 262
ids_list (80)
    on left: 22 23 24, on right: 21 23 24 49 50 52
instance_variables (81)
    on left: 25 26 27, on right: 13 14 16 18 124 125
instance_variable_declarations (82)
    on left: 28 29 30, on right: 25 26 27 28
instance_variable_declaration (83)
    on left: 31, on right: 28 29
variable_declaration_list (84)
    on left: 32 33, on right: 30 31 32
visibility_specification (85)
    on left: 34 35 36, on right: 31
variable_declaration (86)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 32 33 146
Enum (87)
    on left: 49 50, on right: 45
structrule (88)
    on left: 51 52, on right: 46
variable_declarations (89)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52 54 56 57 59
ArrayOne (90)
    on left: 61 62 63 64, on right: 47
array_body (91)
    on left: 65 66 67 68, on right: 63 64 65 67 74 76
ArrayN (92)
    on left: 69 70 71, on right: 48
Multi (93)
    on left: 72 73, on right: 69 70 71 73
array_body2 (94)
    on left: 74 75 76 77, on right: 71 76 77
type (95)
    on left: 78 79, on right: 37 38 39 40 41 42 43 44 53 54 55 56 57
    58 59 60 61 62 63 64 69 70 71 98 99 100
simple_type (96)
    on left: 80 81 82 83 84, on right: 78
complex_type (97)
    on left: 85, on right: 79
interface_declaration_list (98)
    on left: 86 87, on right: 13 15 16 19 86 260 261
interface_declaration (99)
    on left: 88 89, on right: 86 87
class_method_declaration (100)
    on left: 90 91 92 93, on right: 88
instance_method_declaration (101)
    on left: 94 95 96 97, on right: 89
p_type (102)
    on left: 98 99 100, on right: 90 91 94 96 112 132 134 137 139 217
method_selector (103)
    on left: 102 105 106, on right: 90 91 92 93 94 95 96 97 132 134
    135 137 139 140
@1 (104)
    on left: 101, on right: 102
@2 (105)
    on left: 103, on right: 105
@3 (106)
    on left: 104, on right: 105
parameter_list (107)
    on left: 107 108 109 110 111, on right: 102 105 107 108 109 110
parameter (108)
    on left: 112, on right: 107 108 109 110 111
try_catch (109)
    on left: 113, on right: 150
catch_statment (110)
    on left: 114 115, on right: 113 114
Exception_type (111)
    on left: 116 117 118, on right: 114
class_implementation (112)
    on left: 119, on right: 5
class_implementation_header (113)
    on left: 120 121 122 123, on right: 119
class_implementation_body (114)
    on left: 124 125 126, on right: 119
implementation_definition_list (115)
    on left: 127 128, on right: 124 126 127
implementation_definition (116)
    on left: 129 130, on right: 127 128
class_implementation_definition (117)
    on left: 131, on right: 129
class_implementation_definition_header (118)
    on left: 132 134 135, on right: 131
@4 (119)
    on left: 133, on right: 134
instance_implementation_definition (120)
    on left: 136, on right: 130
instance_implementation_definition_header (121)
    on left: 137 139 140, on right: 136
@5 (122)
    on left: 138, on right: 139
statement_list (123)
    on left: 141 142, on right: 141 218
statement (124)
    on left: 143 144 145 146 148 149 150, on right: 141 142 156 220
    225 226 227 234 235 236 237
@6 (125)
    on left: 147, on right: 148
return_statement (126)
    on left: 151 152, on right: 149
loop_statement (127)
    on left: 153 154 155, on right: 143
for_loop (128)
    on left: 156, on right: 153
for_loop_header (129)
    on left: 157 158 159 160 161 162 163 164 165 166 167 168 169 170
   , on right: 156
for_initializer (130)
    on left: 171 172 173 174 175 176 177, on right: 157 158 159 160
    165 166 167
logic_expr (131)
    on left: 178 179 180 181 182 183 184 185 186, on right: 157 158
    159 160 161 162 163 164 166 168 184 185 186 221 222 223 224 238
    242 243 244 245
expr (132)
    on left: 187 188, on right: 65 66 67 68 75 77 145 151 152 157 158
    159 160 161 162 163 164 165 169 171 172 173 174 175 176 178 179
    180 181 182 183 239
logic_expr2 (133)
    on left: 189 190 191 192 193 194 195 196 197 198 199 200,
    on right: 195 196 197 199 200 240
expr2 (134)
    on left: 201, on right: 189 190 191 192 193 194 198 241
assign_expr (135)
    on left: 202, on right: 187
long_id (136)
    on left: 203 204 205, on right: 202 203 211
simple_expr (137)
    on left: 206 207 209 210 211 212 213 214 215 216 217,
    on right: 39 40 43 44 55 56 59 60 188 201 202 212 213 214 215 216
    217 253 254 255 256 257
@7 (138)
    on left: 208, on right: 209
block_body (139)
    on left: 218 219, on right: 113 114 115 131 136 148
while_loop (140)
    on left: 220, on right: 154
while_loop_header (141)
    on left: 221 222 223 224, on right: 220 225
do_while_loop (142)
    on left: 225, on right: 155
conditional_statement (143)
    on left: 226 227 228, on right: 144
switch (144)
    on left: 229 230 231 232 233, on right: 228
switch_body (145)
    on left: 234 235 236 237, on right: 229 230 231 232 233 234 235
switch_statement (146)
    on left: 238 239, on right: 229 230 231 232 233
case_statement (147)
    on left: 240 241, on right: 234 235
if_header (148)
    on left: 242 243 244 245, on right: 226 227
message_call (149)
    on left: 246, on right: 204 247
sender (150)
    on left: 247 248, on right: 246
message (151)
    on left: 249 250, on right: 246
argument_list (152)
    on left: 251 252, on right: 250 251
argument (153)
    on left: 253 254 255 256 257, on right: 251 252
protocol (154)
    on left: 258, on right: 6
protocol_header (155)
    on left: 259, on right: 258
protocol_body (156)
    on left: 260 261 262 263, on right: 258


state 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    program                      go to state 4
    components                   go to state 5
    component                    go to state 6
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 1

    8 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE . IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE . IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


state 2

  120 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  121                            | AT_IMPLEMENTATION . IDENTIFIER error IDENTIFIER
  122                            | AT_IMPLEMENTATION . IDENTIFIER IDENTIFIER
  123                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 14


state 3

  259 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 4

    0 $accept: program . $end

    $end  shift, and go to state 16


state 5

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    $default  reduce using rule 1 (program)

    component                    go to state 17
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 6

    3 components: component .

    $default  reduce using rule 3 (components)


state 7

    4 component: class_interface .

    $default  reduce using rule 4 (component)


state 8

    7 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 18
    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    class_interface_body         go to state 23
    protocol_reference_list      go to state 24
    instance_variables           go to state 25
    interface_declaration_list   go to state 26
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 9

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


state 10

  119 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 18
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    instance_variables                         go to state 32
    class_implementation_body                  go to state 33
    implementation_definition_list             go to state 34
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 11

    6 component: protocol .

    $default  reduce using rule 6 (component)


state 12

  258 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 40
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    protocol_reference_list      go to state 41
    interface_declaration_list   go to state 42
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29
    protocol_body                go to state 43


state 13

    8 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER . error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER . IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .

    error        shift, and go to state 44
    IDENTIFIER   shift, and go to state 45
    SEMI_COLUMN  shift, and go to state 46

    OPEN_S     reduce using rule 12 (class_interface_header)
    LESS_THAN  reduce using rule 12 (class_interface_header)
    AT_END     reduce using rule 12 (class_interface_header)
    PLUS       reduce using rule 12 (class_interface_header)
    MINUS      reduce using rule 12 (class_interface_header)


state 14

  120 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  121                            | AT_IMPLEMENTATION IDENTIFIER . error IDENTIFIER
  122                            | AT_IMPLEMENTATION IDENTIFIER . IDENTIFIER
  123                            | AT_IMPLEMENTATION IDENTIFIER .

    error        shift, and go to state 47
    IDENTIFIER   shift, and go to state 48
    SEMI_COLUMN  shift, and go to state 49

    OPEN_S  reduce using rule 123 (class_implementation_header)
    PLUS    reduce using rule 123 (class_implementation_header)
    MINUS   reduce using rule 123 (class_implementation_header)


state 15

  259 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 259 (protocol_header)


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 components: components component .

    $default  reduce using rule 2 (components)


state 18

   25 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   26                   | OPEN_S . instance_variable_declarations error
   27                   | OPEN_S . instance_variable_declarations

    IDENTIFIER    shift, and go to state 50
    NSSTRING      shift, and go to state 51
    FLOAT         shift, and go to state 52
    CHAR          shift, and go to state 53
    INT           shift, and go to state 54
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CONST         shift, and go to state 58
    VOID          shift, and go to state 59
    STRUCT        shift, and go to state 60
    TYPEDEF       shift, and go to state 61
    ENUM          shift, and go to state 62

    instance_variable_declarations  go to state 63
    instance_variable_declaration   go to state 64
    variable_declaration_list       go to state 65
    visibility_specification        go to state 66
    variable_declaration            go to state 67
    Enum                            go to state 68
    structrule                      go to state 69
    ArrayOne                        go to state 70
    ArrayN                          go to state 71
    type                            go to state 72
    simple_type                     go to state 73
    complex_type                    go to state 74


state 19

   21 protocol_reference_list: LESS_THAN . ids_list MORE_THAN

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 76


state 20

   20 class_interface_body: AT_END .

    $default  reduce using rule 20 (class_interface_body)


state 21

   90 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
   91                         | PLUS . p_type method_selector error
   92                         | PLUS . method_selector SEMI_COMA
   93                         | PLUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 80
    method_selector  go to state 81


state 22

   94 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
   95                            | MINUS . method_selector SEMI_COMA
   96                            | MINUS . p_type method_selector error
   97                            | MINUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 82
    method_selector  go to state 83


state 23

    7 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 7 (class_interface)


state 24

   13 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list . instance_variables AT_END
   15                     | protocol_reference_list . interface_declaration_list AT_END
   17                     | protocol_reference_list . AT_END

    OPEN_S  shift, and go to state 18
    AT_END  shift, and go to state 84
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    instance_variables           go to state 85
    interface_declaration_list   go to state 86
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 25

   16 class_interface_body: instance_variables . interface_declaration_list AT_END
   18                     | instance_variables . AT_END

    AT_END  shift, and go to state 87
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 88
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 26

   19 class_interface_body: interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 89
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 27

   87 interface_declaration_list: interface_declaration .

    $default  reduce using rule 87 (interface_declaration_list)


state 28

   88 interface_declaration: class_method_declaration .

    $default  reduce using rule 88 (interface_declaration)


state 29

   89 interface_declaration: instance_method_declaration .

    $default  reduce using rule 89 (interface_declaration)


state 30

  132 class_implementation_definition_header: PLUS . p_type method_selector
  134                                       | PLUS . method_selector @4 PLUS p_type method_selector
  135                                       | PLUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 91
    method_selector  go to state 92


state 31

  137 instance_implementation_definition_header: MINUS . p_type method_selector
  139                                          | MINUS . method_selector @5 MINUS p_type method_selector
  140                                          | MINUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 93
    method_selector  go to state 94


state 32

  124 class_implementation_body: instance_variables . implementation_definition_list AT_END
  125                          | instance_variables . AT_END

    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition_list             go to state 96
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 33

  119 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 119 (class_implementation)


state 34

  126 class_implementation_body: implementation_definition_list . AT_END
  127 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 35

  128 implementation_definition_list: implementation_definition .

    $default  reduce using rule 128 (implementation_definition_list)


state 36

  129 implementation_definition: class_implementation_definition .

    $default  reduce using rule 129 (implementation_definition)


state 37

  131 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 100


state 38

  130 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 130 (implementation_definition)


state 39

  136 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 101


state 40

  263 protocol_body: AT_END .

    $default  reduce using rule 263 (protocol_body)


state 41

  260 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  262              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 103
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 42

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  261 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 43

  258 protocol: protocol_header protocol_body .

    $default  reduce using rule 258 (protocol)


state 44

    9 class_interface_header: AT_INTERFACE IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 45

   11 class_interface_header: AT_INTERFACE IDENTIFIER IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


state 46

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN .

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 10 (class_interface_header)


state 47

  121 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


state 48

  122 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER IDENTIFIER .

    $default  reduce using rule 122 (class_implementation_header)


state 49

  120 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


state 50

   85 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 109


state 51

   83 simple_type: NSSTRING .

    $default  reduce using rule 83 (simple_type)


state 52

   82 simple_type: FLOAT .

    $default  reduce using rule 82 (simple_type)


state 53

   81 simple_type: CHAR .

    $default  reduce using rule 81 (simple_type)


state 54

   80 simple_type: INT .

    $default  reduce using rule 80 (simple_type)


state 55

   36 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 36 (visibility_specification)


state 56

   35 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 35 (visibility_specification)


state 57

   34 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 34 (visibility_specification)


state 58

   41 variable_declaration: CONST . type IDENTIFIER SEMI_COMA
   42                     | CONST . type IDENTIFIER error
   43                     | CONST . type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST . type IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 110
    simple_type   go to state 73
    complex_type  go to state 74


state 59

   84 simple_type: VOID .

    $default  reduce using rule 84 (simple_type)


state 60

   51 structrule: STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 111


state 61

   50 Enum: TYPEDEF . ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    ENUM  shift, and go to state 112


state 62

   49 Enum: ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 113


state 63

   25 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   26                   | OPEN_S instance_variable_declarations . error
   27                   | OPEN_S instance_variable_declarations .
   28 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    error         shift, and go to state 114
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CLOSE_S       shift, and go to state 115

    AT_END  reduce using rule 27 (instance_variables)
    PLUS    reduce using rule 27 (instance_variables)
    MINUS   reduce using rule 27 (instance_variables)

    instance_variable_declaration  go to state 116
    visibility_specification       go to state 66


state 64

   29 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 29 (instance_variable_declarations)


state 65

   30 instance_variable_declarations: variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 30 (instance_variable_declarations)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 66

   31 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    variable_declaration_list  go to state 118
    variable_declaration       go to state 67
    Enum                       go to state 68
    structrule                 go to state 69
    ArrayOne                   go to state 70
    ArrayN                     go to state 71
    type                       go to state 72
    simple_type                go to state 73
    complex_type               go to state 74


state 67

   33 variable_declaration_list: variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 68

   45 variable_declaration: Enum .

    $default  reduce using rule 45 (variable_declaration)


state 69

   46 variable_declaration: structrule .

    $default  reduce using rule 46 (variable_declaration)


state 70

   47 variable_declaration: ArrayOne .

    $default  reduce using rule 47 (variable_declaration)


state 71

   48 variable_declaration: ArrayN .

    $default  reduce using rule 48 (variable_declaration)


state 72

   37 variable_declaration: type . IDENTIFIER SEMI_COMA
   38                     | type . IDENTIFIER error
   39                     | type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type . IDENTIFIER EQUAL simple_expr error
   61 ArrayOne: type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type . IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type . IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type . IDENTIFIER Multi SEMI_COMA
   71       | type . IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 119


state 73

   78 type: simple_type .

    $default  reduce using rule 78 (type)


state 74

   79 type: complex_type .

    $default  reduce using rule 79 (type)


state 75

   22 ids_list: IDENTIFIER .

    $default  reduce using rule 22 (ids_list)


state 76

   21 protocol_reference_list: LESS_THAN ids_list . MORE_THAN
   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER

    error      shift, and go to state 120
    COMMA      shift, and go to state 121
    MORE_THAN  shift, and go to state 122


state 77

   99 p_type: error . type CLOSE_P

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74


state 78

  102 method_selector: IDENTIFIER . SEMI_COLUMN @1 parameter_list
  105                | IDENTIFIER . @2 IDENTIFIER SEMI_COLUMN @3 parameter_list
  106                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 124

    IDENTIFIER  reduce using rule 103 (@2)
    $default    reduce using rule 106 (method_selector)

    @2  go to state 125


state 79

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74


state 80

   90 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
   91                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 127


state 81

   92 class_method_declaration: PLUS method_selector . SEMI_COMA
   93                         | PLUS method_selector . error

    error      shift, and go to state 128
    SEMI_COMA  shift, and go to state 129


state 82

   94 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA
   96                            | MINUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 130


state 83

   95 instance_method_declaration: MINUS method_selector . SEMI_COMA
   97                            | MINUS method_selector . error

    error      shift, and go to state 131
    SEMI_COMA  shift, and go to state 132


state 84

   17 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


state 85

   13 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables . AT_END

    AT_END  shift, and go to state 133
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 134
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 86

   15 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 135
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 87

   18 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 18 (class_interface_body)


state 88

   16 class_interface_body: instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 136
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 89

   19 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


state 90

   86 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 86 (interface_declaration_list)


state 91

  132 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 137


state 92

  134 class_implementation_definition_header: PLUS method_selector . @4 PLUS p_type method_selector
  135                                       | PLUS method_selector .

    OPEN_S    reduce using rule 135 (class_implementation_definition_header)
    $default  reduce using rule 133 (@4)

    @4  go to state 138


state 93

  137 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 139


state 94

  139 instance_implementation_definition_header: MINUS method_selector . @5 MINUS p_type method_selector
  140                                          | MINUS method_selector .

    OPEN_S    reduce using rule 140 (instance_implementation_definition_header)
    $default  reduce using rule 138 (@5)

    @5  go to state 140


state 95

  125 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 125 (class_implementation_body)


state 96

  124 class_implementation_body: instance_variables implementation_definition_list . AT_END
  127 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 141
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 97

  126 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 126 (class_implementation_body)


state 98

  127 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 127 (implementation_definition_list)


state 99

  218 block_body: OPEN_S . statement_list CLOSE_S
  219           | OPEN_S . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 144
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement_list         go to state 160
    statement              go to state 161
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 100

  131 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 131 (class_implementation_definition)


state 101

  136 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 136 (instance_implementation_definition)


state 102

  262 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 262 (protocol_body)


state 103

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  260 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 178
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 104

  261 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 261 (protocol_body)


state 105

    9 class_interface_header: AT_INTERFACE IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 9 (class_interface_header)


state 106

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 8 (class_interface_header)


state 107

  121 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 121 (class_implementation_header)


state 108

  120 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 120 (class_implementation_header)


state 109

   85 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 85 (complex_type)


state 110

   41 variable_declaration: CONST type . IDENTIFIER SEMI_COMA
   42                     | CONST type . IDENTIFIER error
   43                     | CONST type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type . IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 179


state 111

   51 structrule: STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    OPEN_S  shift, and go to state 180


state 112

   50 Enum: TYPEDEF ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 181


state 113

   49 Enum: ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 182


state 114

   26 instance_variables: OPEN_S instance_variable_declarations error .

    $default  reduce using rule 26 (instance_variables)


state 115

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 25 (instance_variables)


state 116

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 28 (instance_variable_declarations)


state 117

   32 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 32 (variable_declaration_list)


state 118

   31 instance_variable_declaration: visibility_specification variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 31 (instance_variable_declaration)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 119

   37 variable_declaration: type IDENTIFIER . SEMI_COMA
   38                     | type IDENTIFIER . error
   39                     | type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER . EQUAL simple_expr error
   61 ArrayOne: type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER . OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type IDENTIFIER . Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER . Multi SEMI_COMA
   71       | type IDENTIFIER . Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    error      shift, and go to state 183
    SEMI_COMA  shift, and go to state 184
    EQUAL      shift, and go to state 185
    OPEN_ARR   shift, and go to state 186

    Multi  go to state 187


state 120

   23 ids_list: ids_list error . IDENTIFIER

    IDENTIFIER  shift, and go to state 188


state 121

   24 ids_list: ids_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 189


state 122

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN .

    $default  reduce using rule 21 (protocol_reference_list)


state 123

   99 p_type: error type . CLOSE_P

    CLOSE_P  shift, and go to state 190


state 124

  102 method_selector: IDENTIFIER SEMI_COLUMN . @1 parameter_list

    $default  reduce using rule 101 (@1)

    @1  go to state 191


state 125

  105 method_selector: IDENTIFIER @2 . IDENTIFIER SEMI_COLUMN @3 parameter_list

    IDENTIFIER  shift, and go to state 192


state 126

   98 p_type: OPEN_P type . CLOSE_P
  100       | OPEN_P type . error

    error    shift, and go to state 193
    CLOSE_P  shift, and go to state 194


state 127

   90 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
   91                         | PLUS p_type method_selector . error

    error      shift, and go to state 195
    SEMI_COMA  shift, and go to state 196


state 128

   93 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 93 (class_method_declaration)


state 129

   92 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 92 (class_method_declaration)


state 130

   94 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA
   96                            | MINUS p_type method_selector . error

    error      shift, and go to state 197
    SEMI_COMA  shift, and go to state 198


state 131

   97 instance_method_declaration: MINUS method_selector error .

    $default  reduce using rule 97 (instance_method_declaration)


state 132

   95 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 95 (instance_method_declaration)


state 133

   14 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 14 (class_interface_body)


state 134

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 199
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 135

   15 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


state 136

   16 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


state 137

  132 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 132 (class_implementation_definition_header)


state 138

  134 class_implementation_definition_header: PLUS method_selector @4 . PLUS p_type method_selector

    PLUS  shift, and go to state 200


state 139

  137 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 137 (instance_implementation_definition_header)


state 140

  139 instance_implementation_definition_header: MINUS method_selector @5 . MINUS p_type method_selector

    MINUS  shift, and go to state 201


state 141

  124 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 124 (class_implementation_body)


state 142

  113 try_catch: TRY . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 202


state 143

   85 complex_type: IDENTIFIER . MULTI
  205 long_id: IDENTIFIER .

    MULTI  shift, and go to state 109

    $default  reduce using rule 205 (long_id)


state 144

  219 block_body: OPEN_S CLOSE_S .

    $default  reduce using rule 219 (block_body)


state 145

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  216 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 204
    message_call  go to state 177


state 146

  206 simple_expr: STRING_VAL .

    $default  reduce using rule 206 (simple_expr)


state 147

  209 simple_expr: FLOAT_VAL . @7 STRING_VAL

    $default  reduce using rule 208 (@7)

    @7  go to state 205


state 148

  210 simple_expr: CHAR_VAL .

    $default  reduce using rule 210 (simple_expr)


state 149

  207 simple_expr: INT_VAL .

    $default  reduce using rule 207 (simple_expr)


state 150

  157 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  159                | FOR . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  160                | FOR . error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  161                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  162                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  163                | FOR . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  164                | FOR . error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  165                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  167                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  168                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  169                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  170                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    error       shift, and go to state 206
    IDENTIFIER  shift, and go to state 207
    INT         shift, and go to state 208
    SEMI_COMA   shift, and go to state 209
    OPEN_P      shift, and go to state 210

    for_initializer  go to state 211


state 151

  221 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P
  222                  | WHILE . OPEN_P logic_expr error
  223                  | WHILE . logic_expr CLOSE_P
  224                  | WHILE . error logic_expr CLOSE_P

    error       shift, and go to state 212
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 214
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 216
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 152

  242 if_header: IF . OPEN_P logic_expr CLOSE_P
  243          | IF . OPEN_P logic_expr error
  244          | IF . logic_expr CLOSE_P
  245          | IF . error logic_expr CLOSE_P

    error       shift, and go to state 218
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 219
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 220
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 153

  246 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 221
    OPEN_ARR    shift, and go to state 153

    message_call  go to state 222
    sender        go to state 223


state 154

  151 return_statement: RETURN . expr SEMI_COMA
  152                 | RETURN . expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 224
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 155

  225 do_while_loop: DO . statement while_loop_header SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 225
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 156

  229 switch: SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  230       | SWITCH . error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  231       | SWITCH . OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  232       | SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  233       | SWITCH . OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

    error   shift, and go to state 226
    OPEN_P  shift, and go to state 227


state 157

  146 statement: variable_declaration .

    $default  reduce using rule 146 (statement)


state 158

  217 simple_expr: p_type . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 228
    message_call  go to state 177


state 159

  150 statement: try_catch .

    $default  reduce using rule 150 (statement)


state 160

  141 statement_list: statement_list . statement
  218 block_body: OPEN_S statement_list . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 229
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 230
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 161

  142 statement_list: statement .

    $default  reduce using rule 142 (statement_list)


state 162

  148 statement: @6 . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 231


state 163

  149 statement: return_statement .

    $default  reduce using rule 149 (statement)


state 164

  143 statement: loop_statement .

    $default  reduce using rule 143 (statement)


state 165

  153 loop_statement: for_loop .

    $default  reduce using rule 153 (loop_statement)


state 166

  156 for_loop: for_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 232
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 167

  145 statement: expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 233


state 168

  187 expr: assign_expr .

    $default  reduce using rule 187 (expr)


state 169

  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  211 simple_expr: long_id .

    EQUAL  shift, and go to state 234
    DOT    shift, and go to state 235

    $default  reduce using rule 211 (simple_expr)


state 170

  188 expr: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 188 (expr)


state 171

  154 loop_statement: while_loop .

    $default  reduce using rule 154 (loop_statement)


state 172

  220 while_loop: while_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 240
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 173

  155 loop_statement: do_while_loop .

    $default  reduce using rule 155 (loop_statement)


state 174

  144 statement: conditional_statement .

    $default  reduce using rule 144 (statement)


state 175

  228 conditional_statement: switch .

    $default  reduce using rule 228 (conditional_statement)


state 176

  226 conditional_statement: if_header . statement
  227                      | if_header . statement ELSE statement

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 241
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 177

  204 long_id: message_call .

    $default  reduce using rule 204 (long_id)


state 178

  260 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 260 (protocol_body)


state 179

   41 variable_declaration: CONST type IDENTIFIER . SEMI_COMA
   42                     | CONST type IDENTIFIER . error
   43                     | CONST type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER . EQUAL simple_expr error

    error      shift, and go to state 242
    SEMI_COMA  shift, and go to state 243
    EQUAL      shift, and go to state 244


state 180

   51 structrule: STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 245
    VOID        shift, and go to state 59

    variable_declarations  go to state 246
    type                   go to state 247
    simple_type            go to state 73
    complex_type           go to state 74


state 181

   50 Enum: TYPEDEF ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 248


state 182

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   49 Enum: ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 249
    COMMA    shift, and go to state 121


state 183

   38 variable_declaration: type IDENTIFIER error .

    $default  reduce using rule 38 (variable_declaration)


state 184

   37 variable_declaration: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 37 (variable_declaration)


state 185

   39 variable_declaration: type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 250
    message_call  go to state 177


state 186

   61 ArrayOne: type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR . INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    INT_VAL    shift, and go to state 251
    CLOSE_ARR  shift, and go to state 252


state 187

   69 ArrayN: type IDENTIFIER Multi . EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi . SEMI_COMA
   71       | type IDENTIFIER Multi . EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA
   73 Multi: Multi . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 253
    EQUAL      shift, and go to state 254
    OPEN_ARR   shift, and go to state 255


state 188

   23 ids_list: ids_list error IDENTIFIER .

    $default  reduce using rule 23 (ids_list)


state 189

   24 ids_list: ids_list COMMA IDENTIFIER .

    $default  reduce using rule 24 (ids_list)


state 190

   99 p_type: error type CLOSE_P .

    $default  reduce using rule 99 (p_type)


state 191

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 256
    parameter_list  go to state 257
    parameter       go to state 258


state 192

  105 method_selector: IDENTIFIER @2 IDENTIFIER . SEMI_COLUMN @3 parameter_list

    SEMI_COLUMN  shift, and go to state 259


state 193

  100 p_type: OPEN_P type error .

    $default  reduce using rule 100 (p_type)


state 194

   98 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 98 (p_type)


state 195

   91 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 91 (class_method_declaration)


state 196

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 90 (class_method_declaration)


state 197

   96 instance_method_declaration: MINUS p_type method_selector error .

    $default  reduce using rule 96 (instance_method_declaration)


state 198

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 94 (instance_method_declaration)


state 199

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 13 (class_interface_body)


state 200

  134 class_implementation_definition_header: PLUS method_selector @4 PLUS . p_type method_selector

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type  go to state 260


state 201

  139 instance_implementation_definition_header: MINUS method_selector @5 MINUS . p_type method_selector

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type  go to state 261


state 202

  113 try_catch: TRY block_body . catch_statment

    CATCH    shift, and go to state 262
    FINALLY  shift, and go to state 263

    catch_statment  go to state 264


state 203

  203 long_id: long_id . DOT IDENTIFIER
  211 simple_expr: long_id .

    DOT  shift, and go to state 235

    $default  reduce using rule 211 (simple_expr)


state 204

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  216            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 236
    MINUS    shift, and go to state 237
    CLOSE_P  shift, and go to state 265
    MULTI    shift, and go to state 238
    DIV      shift, and go to state 239


state 205

  209 simple_expr: FLOAT_VAL @7 . STRING_VAL

    STRING_VAL  shift, and go to state 266


state 206

  160 for_loop_header: FOR error . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  164                | FOR error . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    IDENTIFIER  shift, and go to state 207
    INT         shift, and go to state 208
    SEMI_COMA   shift, and go to state 267

    for_initializer  go to state 268


state 207

  174 for_initializer: IDENTIFIER . EQUAL expr
  175                | IDENTIFIER . expr
  176                | IDENTIFIER . error expr
  177                | IDENTIFIER .

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    EQUAL       shift, and go to state 270
    OPEN_ARR    shift, and go to state 153

    SEMI_COMA  reduce using rule 177 (for_initializer)

    p_type        go to state 158
    expr          go to state 271
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 208

  171 for_initializer: INT . IDENTIFIER EQUAL expr
  172                | INT . IDENTIFIER expr
  173                | INT . IDENTIFIER error expr

    IDENTIFIER  shift, and go to state 272


state 209

  163 for_loop_header: FOR SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 274
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 210

  157 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  161                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr error
  165                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  167                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  168                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  169                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  170                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 207
    INT         shift, and go to state 208
    SEMI_COMA   shift, and go to state 275

    for_initializer  go to state 276


state 211

  159 for_loop_header: FOR for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 277


state 212

   99 p_type: error . type CLOSE_P
  224 while_loop_header: WHILE error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 278
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 213

  205 long_id: IDENTIFIER .

    $default  reduce using rule 205 (long_id)


state 214

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  184 logic_expr: OPEN_P . logic_expr CLOSE_P
  216 simple_expr: OPEN_P . simple_expr CLOSE_P
  221 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P
  222                  | WHILE OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 279
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 280
    message_call  go to state 177


state 215

  183 logic_expr: NOT_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 281
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 216

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  223 while_loop_header: WHILE logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 282
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 217

  178 logic_expr: expr . LESS_THAN expr
  179           | expr . MORE_THAN expr
  180           | expr . LESS_OR_EQUAL expr
  181           | expr . MORE_OR_EQUAL expr
  182           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 285
    MORE_THAN      shift, and go to state 286
    LESS_OR_EQUAL  shift, and go to state 287
    MORE_OR_EQUAL  shift, and go to state 288
    EQUAL_EQUAL    shift, and go to state 289


state 218

   99 p_type: error . type CLOSE_P
  245 if_header: IF error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 290
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 219

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  184 logic_expr: OPEN_P . logic_expr CLOSE_P
  216 simple_expr: OPEN_P . simple_expr CLOSE_P
  242 if_header: IF OPEN_P . logic_expr CLOSE_P
  243          | IF OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 291
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 280
    message_call  go to state 177


state 220

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  244 if_header: IF logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 292
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 221

  248 sender: IDENTIFIER .

    $default  reduce using rule 248 (sender)


state 222

  247 sender: message_call .

    $default  reduce using rule 247 (sender)


state 223

  246 message_call: OPEN_ARR sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 293

    message  go to state 294


state 224

  151 return_statement: RETURN expr . SEMI_COMA
  152                 | RETURN expr . error

    error      shift, and go to state 295
    SEMI_COMA  shift, and go to state 296


state 225

  225 do_while_loop: DO statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 151

    while_loop_header  go to state 297


state 226

  230 switch: SWITCH error . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type            go to state 158
    logic_expr        go to state 298
    expr              go to state 299
    assign_expr       go to state 168
    long_id           go to state 169
    simple_expr       go to state 170
    switch_statement  go to state 300
    message_call      go to state 177


state 227

  229 switch: SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  231       | SWITCH OPEN_P . switch_statement error OPEN_S switch_body CLOSE_S
  232       | SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body error
  233       | SWITCH OPEN_P . switch_statement CLOSE_P error switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type            go to state 158
    logic_expr        go to state 298
    expr              go to state 299
    assign_expr       go to state 168
    long_id           go to state 169
    simple_expr       go to state 170
    switch_statement  go to state 301
    message_call      go to state 177


state 228

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  217            | p_type simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 217 (simple_expr)


state 229

  218 block_body: OPEN_S statement_list CLOSE_S .

    $default  reduce using rule 218 (block_body)


state 230

  141 statement_list: statement_list statement .

    $default  reduce using rule 141 (statement_list)


state 231

  148 statement: @6 block_body .

    $default  reduce using rule 148 (statement)


state 232

  156 for_loop: for_loop_header statement .

    $default  reduce using rule 156 (for_loop)


state 233

  145 statement: expr SEMI_COMA .

    $default  reduce using rule 145 (statement)


state 234

  202 assign_expr: long_id EQUAL . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 302
    message_call  go to state 177


state 235

  203 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 303


state 236

  212 simple_expr: simple_expr PLUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 304
    message_call  go to state 177


state 237

  213 simple_expr: simple_expr MINUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 305
    message_call  go to state 177


state 238

  214 simple_expr: simple_expr MULTI . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 306
    message_call  go to state 177


state 239

  215 simple_expr: simple_expr DIV . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 307
    message_call  go to state 177


state 240

  220 while_loop: while_loop_header statement .

    $default  reduce using rule 220 (while_loop)


state 241

  226 conditional_statement: if_header statement .
  227                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 308

    $default  reduce using rule 226 (conditional_statement)


state 242

   42 variable_declaration: CONST type IDENTIFIER error .

    $default  reduce using rule 42 (variable_declaration)


state 243

   41 variable_declaration: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 41 (variable_declaration)


state 244

   43 variable_declaration: CONST type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 309
    message_call  go to state 177


state 245

   58 variable_declarations: CONST . type IDENTIFIER SEMI_COMA
   60                      | CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 310
    simple_type   go to state 73
    complex_type  go to state 74


state 246

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S ids_list SEMI_COMA
   54 variable_declarations: variable_declarations . type IDENTIFIER SEMI_COMA
   56                      | variable_declarations . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations . CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations . CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 311
    CONST       shift, and go to state 312
    VOID        shift, and go to state 59

    type          go to state 313
    simple_type   go to state 73
    complex_type  go to state 74


state 247

   53 variable_declarations: type . IDENTIFIER SEMI_COMA
   55                      | type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 314


state 248

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   50 Enum: TYPEDEF ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 315
    COMMA    shift, and go to state 121


state 249

   49 Enum: ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 316


state 250

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr . error
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    error      shift, and go to state 317
    SEMI_COMA  shift, and go to state 318
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 251

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL . CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    CLOSE_ARR  shift, and go to state 319


state 252

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

    EQUAL  shift, and go to state 320


state 253

   70 ArrayN: type IDENTIFIER Multi SEMI_COMA .

    $default  reduce using rule 70 (ArrayN)


state 254

   69 ArrayN: type IDENTIFIER Multi EQUAL . OPEN_S CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL . OPEN_S array_body2 CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 321


state 255

   73 Multi: Multi OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 322


state 256

  112 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 323


state 257

  102 method_selector: IDENTIFIER SEMI_COLUMN @1 parameter_list .
  107 parameter_list: parameter_list . SEMI_COLUMN parameter
  108               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  109               | parameter_list . IDENTIFIER error parameter
  110               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 324
    SEMI_COLUMN  shift, and go to state 325

    $default  reduce using rule 102 (method_selector)


state 258

  111 parameter_list: parameter .

    $default  reduce using rule 111 (parameter_list)


state 259

  105 method_selector: IDENTIFIER @2 IDENTIFIER SEMI_COLUMN . @3 parameter_list

    $default  reduce using rule 104 (@3)

    @3  go to state 326


state 260

  134 class_implementation_definition_header: PLUS method_selector @4 PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 327


state 261

  139 instance_implementation_definition_header: MINUS method_selector @5 MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 328


state 262

  114 catch_statment: CATCH . OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment

    OPEN_P  shift, and go to state 329


state 263

  115 catch_statment: FINALLY . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 330


state 264

  113 try_catch: TRY block_body catch_statment .

    $default  reduce using rule 113 (try_catch)


state 265

  216 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 216 (simple_expr)


state 266

  209 simple_expr: FLOAT_VAL @7 STRING_VAL .

    $default  reduce using rule 209 (simple_expr)


state 267

  164 for_loop_header: FOR error SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 331
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 268

  160 for_loop_header: FOR error for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 332


state 269

   99 p_type: error . type CLOSE_P
  176 for_initializer: IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    expr          go to state 333
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 270

  174 for_initializer: IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 334
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 271

  175 for_initializer: IDENTIFIER expr .

    $default  reduce using rule 175 (for_initializer)


state 272

  171 for_initializer: INT IDENTIFIER . EQUAL expr
  172                | INT IDENTIFIER . expr
  173                | INT IDENTIFIER . error expr

    error       shift, and go to state 335
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    EQUAL       shift, and go to state 336
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 337
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 273

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  184 logic_expr: OPEN_P . logic_expr CLOSE_P
  216 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr    go to state 338
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 280
    message_call  go to state 177


state 274

  163 for_loop_header: FOR SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 339
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 275

  161 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr error
  168                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  169                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  170                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    SEMI_COMA   shift, and go to state 340
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 341
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 276

  157 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr error
  165                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  167                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 342


state 277

  159 for_loop_header: FOR for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 343
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 278

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  224 while_loop_header: WHILE error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 344
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 279

  184 logic_expr: OPEN_P logic_expr . CLOSE_P
  185           | logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  221 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P
  222                  | WHILE OPEN_P logic_expr . error

    error    shift, and go to state 345
    CLOSE_P  shift, and go to state 346
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 280

  188 expr: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  216            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 236
    MINUS    shift, and go to state 237
    CLOSE_P  shift, and go to state 265
    MULTI    shift, and go to state 238
    DIV      shift, and go to state 239

    $default  reduce using rule 188 (expr)


state 281

  183 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 183 (logic_expr)


state 282

  223 while_loop_header: WHILE logic_expr CLOSE_P .

    $default  reduce using rule 223 (while_loop_header)


state 283

  185 logic_expr: logic_expr AND_AND . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 347
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 284

  186 logic_expr: logic_expr OR_OR . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 348
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 285

  178 logic_expr: expr LESS_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 349
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 286

  179 logic_expr: expr MORE_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 350
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 287

  180 logic_expr: expr LESS_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 351
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 288

  181 logic_expr: expr MORE_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 352
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 289

  182 logic_expr: expr EQUAL_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 353
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 290

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  245 if_header: IF error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 354
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 291

  184 logic_expr: OPEN_P logic_expr . CLOSE_P
  185           | logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  242 if_header: IF OPEN_P logic_expr . CLOSE_P
  243          | IF OPEN_P logic_expr . error

    error    shift, and go to state 355
    CLOSE_P  shift, and go to state 356
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 292

  244 if_header: IF logic_expr CLOSE_P .

    $default  reduce using rule 244 (if_header)


state 293

  249 message: IDENTIFIER .
  250        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 357

    $default  reduce using rule 249 (message)


state 294

  246 message_call: OPEN_ARR sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 358


state 295

  152 return_statement: RETURN expr error .

    $default  reduce using rule 152 (return_statement)


state 296

  151 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 151 (return_statement)


state 297

  225 do_while_loop: DO statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 359


state 298

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  238 switch_statement: logic_expr .

    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284

    $default  reduce using rule 238 (switch_statement)


state 299

  178 logic_expr: expr . LESS_THAN expr
  179           | expr . MORE_THAN expr
  180           | expr . LESS_OR_EQUAL expr
  181           | expr . MORE_OR_EQUAL expr
  182           | expr . EQUAL_EQUAL expr
  239 switch_statement: expr .

    LESS_THAN      shift, and go to state 285
    MORE_THAN      shift, and go to state 286
    LESS_OR_EQUAL  shift, and go to state 287
    MORE_OR_EQUAL  shift, and go to state 288
    EQUAL_EQUAL    shift, and go to state 289

    $default  reduce using rule 239 (switch_statement)


state 300

  230 switch: SWITCH error switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S

    CLOSE_P  shift, and go to state 360


state 301

  229 switch: SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S
  231       | SWITCH OPEN_P switch_statement . error OPEN_S switch_body CLOSE_S
  232       | SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body error
  233       | SWITCH OPEN_P switch_statement . CLOSE_P error switch_body CLOSE_S

    error    shift, and go to state 361
    CLOSE_P  shift, and go to state 362


state 302

  202 assign_expr: long_id EQUAL simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 202 (assign_expr)


state 303

  203 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 203 (long_id)


state 304

  212 simple_expr: simple_expr . PLUS simple_expr
  212            | simple_expr PLUS simple_expr .
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 212 (simple_expr)


state 305

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  213            | simple_expr MINUS simple_expr .
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 213 (simple_expr)


state 306

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  214            | simple_expr MULTI simple_expr .
  215            | simple_expr . DIV simple_expr

    $default  reduce using rule 214 (simple_expr)


state 307

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  215            | simple_expr DIV simple_expr .

    $default  reduce using rule 215 (simple_expr)


state 308

  227 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 363
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 309

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr . error
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    error      shift, and go to state 364
    SEMI_COMA  shift, and go to state 365
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 310

   58 variable_declarations: CONST type . IDENTIFIER SEMI_COMA
   60                      | CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 366


state 311

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 75
    SEMI_COMA   shift, and go to state 367

    ids_list  go to state 368


state 312

   57 variable_declarations: variable_declarations CONST . type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 369
    simple_type   go to state 73
    complex_type  go to state 74


state 313

   54 variable_declarations: variable_declarations type . IDENTIFIER SEMI_COMA
   56                      | variable_declarations type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 370


state 314

   53 variable_declarations: type IDENTIFIER . SEMI_COMA
   55                      | type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 371
    SEMI_COMA    shift, and go to state 372


state 315

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 373


state 316

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 374


state 317

   40 variable_declaration: type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 40 (variable_declaration)


state 318

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 39 (variable_declaration)


state 319

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 375
    EQUAL      shift, and go to state 376
    OPEN_ARR   shift, and go to state 377


state 320

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 378


state 321

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S . CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S . array_body2 CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_S      shift, and go to state 379
    CLOSE_S     shift, and go to state 380
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    array_body2   go to state 381
    p_type        go to state 158
    expr          go to state 382
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 322

   73 Multi: Multi OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 383


state 323

  112 parameter: p_type IDENTIFIER .

    $default  reduce using rule 112 (parameter)


state 324

  108 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter
  109               | parameter_list IDENTIFIER . error parameter
  110               | parameter_list IDENTIFIER . parameter

    error        shift, and go to state 384
    SEMI_COLUMN  shift, and go to state 385
    OPEN_P       shift, and go to state 79

    p_type     go to state 256
    parameter  go to state 386


state 325

  107 parameter_list: parameter_list SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 256
    parameter  go to state 387


state 326

  105 method_selector: IDENTIFIER @2 IDENTIFIER SEMI_COLUMN @3 . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 256
    parameter_list  go to state 388
    parameter       go to state 258


state 327

  134 class_implementation_definition_header: PLUS method_selector @4 PLUS p_type method_selector .

    $default  reduce using rule 134 (class_implementation_definition_header)


state 328

  139 instance_implementation_definition_header: MINUS method_selector @5 MINUS p_type method_selector .

    $default  reduce using rule 139 (instance_implementation_definition_header)


state 329

  114 catch_statment: CATCH OPEN_P . NSEXception Exception_type CLOSE_P block_body catch_statment

    NSEXception  shift, and go to state 389


state 330

  115 catch_statment: FINALLY block_body .

    $default  reduce using rule 115 (catch_statment)


state 331

  164 for_loop_header: FOR error SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 390
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 332

  160 for_loop_header: FOR error for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 391
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 333

  176 for_initializer: IDENTIFIER error expr .

    $default  reduce using rule 176 (for_initializer)


state 334

  174 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 174 (for_initializer)


state 335

   99 p_type: error . type CLOSE_P
  173 for_initializer: INT IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    expr          go to state 392
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 336

  171 for_initializer: INT IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 393
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 337

  172 for_initializer: INT IDENTIFIER expr .

    $default  reduce using rule 172 (for_initializer)


state 338

  184 logic_expr: OPEN_P logic_expr . CLOSE_P
  185           | logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 394
    AND_AND  shift, and go to state 283
    OR_OR    shift, and go to state 284


state 339

  163 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 395
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 340

  169 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  170                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    CLOSE_P     shift, and go to state 396
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 397
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 341

  161 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr error
  168                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 398
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 342

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr error
  165                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  166                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  167                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    SEMI_COMA   shift, and go to state 399
    OPEN_P      shift, and go to state 273
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 215
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr    go to state 400
    expr          go to state 217
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 343

  159 for_loop_header: FOR for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 401
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 344

  224 while_loop_header: WHILE error logic_expr CLOSE_P .

    $default  reduce using rule 224 (while_loop_header)


state 345

  222 while_loop_header: WHILE OPEN_P logic_expr error .

    $default  reduce using rule 222 (while_loop_header)


state 346

  184 logic_expr: OPEN_P logic_expr CLOSE_P .
  221 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 184 (logic_expr)
    AND_AND   reduce using rule 184 (logic_expr)
    OR_OR     reduce using rule 184 (logic_expr)
    $default  reduce using rule 221 (while_loop_header)


state 347

  185 logic_expr: logic_expr . AND_AND logic_expr
  185           | logic_expr AND_AND logic_expr .
  186           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 185 (logic_expr)


state 348

  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr
  186           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 186 (logic_expr)


state 349

  178 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 178 (logic_expr)


state 350

  179 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 179 (logic_expr)


state 351

  180 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 180 (logic_expr)


state 352

  181 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 181 (logic_expr)


state 353

  182 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 182 (logic_expr)


state 354

  245 if_header: IF error logic_expr CLOSE_P .

    $default  reduce using rule 245 (if_header)


state 355

  243 if_header: IF OPEN_P logic_expr error .

    $default  reduce using rule 243 (if_header)


state 356

  184 logic_expr: OPEN_P logic_expr CLOSE_P .
  242 if_header: IF OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 184 (logic_expr)
    AND_AND   reduce using rule 184 (logic_expr)
    OR_OR     reduce using rule 184 (logic_expr)
    $default  reduce using rule 242 (if_header)


state 357

  250 message: IDENTIFIER SEMI_COLUMN . argument_list

    error        shift, and go to state 402
    IDENTIFIER   shift, and go to state 403
    SEMI_COLUMN  shift, and go to state 404

    argument_list  go to state 405
    argument       go to state 406


state 358

  246 message_call: OPEN_ARR sender message CLOSE_ARR .

    $default  reduce using rule 246 (message_call)


state 359

  225 do_while_loop: DO statement while_loop_header SEMI_COMA .

    $default  reduce using rule 225 (do_while_loop)


state 360

  230 switch: SWITCH error switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 407


state 361

  231 switch: SWITCH OPEN_P switch_statement error . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 408


state 362

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S
  232       | SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body error
  233       | SWITCH OPEN_P switch_statement CLOSE_P . error switch_body CLOSE_S

    error   shift, and go to state 409
    OPEN_S  shift, and go to state 410


state 363

  227 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 227 (conditional_statement)


state 364

   44 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 44 (variable_declaration)


state 365

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 43 (variable_declaration)


state 366

   58 variable_declarations: CONST type IDENTIFIER . SEMI_COMA
   60                      | CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 411
    SEMI_COMA    shift, and go to state 412


state 367

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA .

    $default  reduce using rule 51 (structrule)


state 368

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list . SEMI_COMA

    error      shift, and go to state 120
    SEMI_COMA  shift, and go to state 413
    COMMA      shift, and go to state 121


state 369

   57 variable_declarations: variable_declarations CONST type . IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 414


state 370

   54 variable_declarations: variable_declarations type IDENTIFIER . SEMI_COMA
   56                      | variable_declarations type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 415
    SEMI_COMA    shift, and go to state 416


state 371

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 417
    message_call  go to state 177


state 372

   53 variable_declarations: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 53 (variable_declarations)


state 373

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 418


state 374

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 49 (Enum)


state 375

   62 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA .

    $default  reduce using rule 62 (ArrayOne)


state 376

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 419


state 377

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 420


state 378

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 421

    array_body    go to state 422
    p_type        go to state 158
    expr          go to state 423
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 379

   74 array_body2: OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 421

    array_body    go to state 424
    p_type        go to state 158
    expr          go to state 423
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 380

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 425


state 381

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 . CLOSE_S SEMI_COMA
   76 array_body2: array_body2 . COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 . COMMA expr

    CLOSE_S  shift, and go to state 426
    COMMA    shift, and go to state 427


state 382

   75 array_body2: expr .

    $default  reduce using rule 75 (array_body2)


state 383

   73 Multi: Multi OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 73 (Multi)


state 384

   99 p_type: error . type CLOSE_P
  109 parameter_list: parameter_list IDENTIFIER error . parameter

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 79

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 256
    parameter     go to state 428


state 385

  108 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 256
    parameter  go to state 429


state 386

  110 parameter_list: parameter_list IDENTIFIER parameter .

    $default  reduce using rule 110 (parameter_list)


state 387

  107 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 107 (parameter_list)


state 388

  105 method_selector: IDENTIFIER @2 IDENTIFIER SEMI_COLUMN @3 parameter_list .
  107 parameter_list: parameter_list . SEMI_COLUMN parameter
  108               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  109               | parameter_list . IDENTIFIER error parameter
  110               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 324
    SEMI_COLUMN  shift, and go to state 325

    $default  reduce using rule 105 (method_selector)


state 389

  114 catch_statment: CATCH OPEN_P NSEXception . Exception_type CLOSE_P block_body catch_statment

    NUllPointerException   shift, and go to state 430
    OUtOfBoundryException  shift, and go to state 431
    CAstException          shift, and go to state 432

    Exception_type  go to state 433


state 390

  164 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 434
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 391

  160 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 435
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 392

  173 for_initializer: INT IDENTIFIER error expr .

    $default  reduce using rule 173 (for_initializer)


state 393

  171 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 171 (for_initializer)


state 394

  184 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 184 (logic_expr)


state 395

  163 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 436


state 396

  170 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 170 (for_loop_header)


state 397

  169 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 437


state 398

  161 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr error
  168                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    CLOSE_P     shift, and go to state 438
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 439
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 399

  165 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  167                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    CLOSE_P     shift, and go to state 440
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 441
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 400

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr error
  166                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  185 logic_expr: logic_expr . AND_AND logic_expr
  186           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 442
    AND_AND    shift, and go to state 283
    OR_OR      shift, and go to state 284


state 401

  159 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 443
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 402

  254 argument: error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 444
    message_call  go to state 177


state 403

  255 argument: IDENTIFIER . SEMI_COLUMN simple_expr
  256         | IDENTIFIER . simple_expr
  257         | IDENTIFIER . error simple_expr

    error        shift, and go to state 445
    IDENTIFIER   shift, and go to state 213
    SEMI_COLUMN  shift, and go to state 446
    OPEN_P       shift, and go to state 145
    STRING_VAL   shift, and go to state 146
    FLOAT_VAL    shift, and go to state 147
    CHAR_VAL     shift, and go to state 148
    INT_VAL      shift, and go to state 149
    OPEN_ARR     shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 447
    message_call  go to state 177


state 404

  253 argument: SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 448
    message_call  go to state 177


state 405

  250 message: IDENTIFIER SEMI_COLUMN argument_list .
  251 argument_list: argument_list . argument

    error        shift, and go to state 402
    IDENTIFIER   shift, and go to state 403
    SEMI_COLUMN  shift, and go to state 404

    CLOSE_ARR  reduce using rule 250 (message)

    argument  go to state 449


state 406

  252 argument_list: argument .

    $default  reduce using rule 252 (argument_list)


state 407

  230 switch: SWITCH error switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 452


state 408

  231 switch: SWITCH OPEN_P switch_statement error OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 453


state 409

  233 switch: SWITCH OPEN_P switch_statement CLOSE_P error . switch_body CLOSE_S

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 454


state 410

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S
  232       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body error

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 455


state 411

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 456
    message_call  go to state 177


state 412

   58 variable_declarations: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 58 (variable_declarations)


state 413

   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA .

    $default  reduce using rule 52 (structrule)


state 414

   57 variable_declarations: variable_declarations CONST type IDENTIFIER . SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 457
    SEMI_COMA    shift, and go to state 458


state 415

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 459
    message_call  go to state 177


state 416

   54 variable_declarations: variable_declarations type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 54 (variable_declarations)


state 417

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 460
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 418

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 50 (Enum)


state 419

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    CLOSE_S     shift, and go to state 461
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 421

    array_body    go to state 462
    p_type        go to state 158
    expr          go to state 423
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 420

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 463


state 421

   68 array_body: OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  246 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 221
    INT_VAL     shift, and go to state 464
    OPEN_ARR    shift, and go to state 153

    message_call  go to state 222
    sender        go to state 223


state 422

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 465
    COMMA    shift, and go to state 466


state 423

   66 array_body: expr .

    $default  reduce using rule 66 (array_body)


state 424

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   74 array_body2: OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 467
    COMMA    shift, and go to state 466


state 425

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 69 (ArrayN)


state 426

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 468


state 427

   76 array_body2: array_body2 COMMA . OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_S      shift, and go to state 469
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 470
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 428

  109 parameter_list: parameter_list IDENTIFIER error parameter .

    $default  reduce using rule 109 (parameter_list)


state 429

  108 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 108 (parameter_list)


state 430

  116 Exception_type: NUllPointerException .

    $default  reduce using rule 116 (Exception_type)


state 431

  117 Exception_type: OUtOfBoundryException .

    $default  reduce using rule 117 (Exception_type)


state 432

  118 Exception_type: CAstException .

    $default  reduce using rule 118 (Exception_type)


state 433

  114 catch_statment: CATCH OPEN_P NSEXception Exception_type . CLOSE_P block_body catch_statment

    CLOSE_P  shift, and go to state 471


state 434

  164 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 472


state 435

  160 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 473
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 436

  163 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 163 (for_loop_header)


state 437

  169 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 169 (for_loop_header)


state 438

  168 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 168 (for_loop_header)


state 439

  161 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  162                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 474
    CLOSE_P  shift, and go to state 475


state 440

  167 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 167 (for_loop_header)


state 441

  165 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 476


state 442

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr error
  166                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    CLOSE_P     shift, and go to state 477
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 478
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 443

  159 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 479


state 444

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  254 argument: error simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 254 (argument)


state 445

   99 p_type: error . type CLOSE_P
  257 argument: IDENTIFIER error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 480
    message_call  go to state 177


state 446

  255 argument: IDENTIFIER SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 481
    message_call  go to state 177


state 447

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  256 argument: IDENTIFIER simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 256 (argument)


state 448

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  253 argument: SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 253 (argument)


state 449

  251 argument_list: argument_list argument .

    $default  reduce using rule 251 (argument_list)


state 450

  236 switch_body: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  237            | DEFAULT . SEMI_COLUMN statement error SEMI_COMA

    SEMI_COLUMN  shift, and go to state 482


state 451

  234 switch_body: CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  235            | CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    OPEN_P  shift, and go to state 483


state 452

  230 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 484


state 453

  231 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 485


state 454

  233 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 486


state 455

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S
  232       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . error

    error    shift, and go to state 487
    CLOSE_S  shift, and go to state 488


state 456

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 489
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 457

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    long_id       go to state 203
    simple_expr   go to state 490
    message_call  go to state 177


state 458

   57 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 57 (variable_declarations)


state 459

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 491
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 460

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 55 (variable_declarations)


state 461

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 492


state 462

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 493
    COMMA    shift, and go to state 466


state 463

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 72 (Multi)


state 464

   68 array_body: OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 494


state 465

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 495


state 466

   65 array_body: array_body COMMA . expr
   67           | array_body COMMA . OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 496

    p_type        go to state 158
    expr          go to state 497
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 467

   74 array_body2: OPEN_S array_body CLOSE_S .

    $default  reduce using rule 74 (array_body2)


state 468

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (ArrayN)


state 469

   76 array_body2: array_body2 COMMA OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 421

    array_body    go to state 498
    p_type        go to state 158
    expr          go to state 423
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 470

   77 array_body2: array_body2 COMMA expr .

    $default  reduce using rule 77 (array_body2)


state 471

  114 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 499


state 472

  164 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 164 (for_loop_header)


state 473

  160 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 500


state 474

  162 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 162 (for_loop_header)


state 475

  161 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 161 (for_loop_header)


state 476

  165 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 165 (for_loop_header)


state 477

  166 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 166 (for_loop_header)


state 478

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 501
    CLOSE_P  shift, and go to state 502


state 479

  159 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 159 (for_loop_header)


state 480

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  257 argument: IDENTIFIER error simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 257 (argument)


state 481

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  255 argument: IDENTIFIER SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 255 (argument)


state 482

  236 switch_body: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  237            | DEFAULT SEMI_COLUMN . statement error SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 503
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 483

  234 switch_body: CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    error       shift, and go to state 504
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 505
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 506
    OPEN_ARR    shift, and go to state 153

    p_type          go to state 158
    logic_expr2     go to state 507
    expr2           go to state 508
    long_id         go to state 203
    simple_expr     go to state 509
    case_statement  go to state 510
    message_call    go to state 177


state 484

  230 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 230 (switch)


state 485

  231 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 231 (switch)


state 486

  233 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S .

    $default  reduce using rule 233 (switch)


state 487

  232 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error .

    $default  reduce using rule 232 (switch)


state 488

  229 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 229 (switch)


state 489

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 60 (variable_declarations)


state 490

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 511
    PLUS       shift, and go to state 236
    MINUS      shift, and go to state 237
    MULTI      shift, and go to state 238
    DIV        shift, and go to state 239


state 491

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 56 (variable_declarations)


state 492

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 61 (ArrayOne)


state 493

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 512


state 494

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 513


state 495

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 64 (ArrayOne)


state 496

   67 array_body: array_body COMMA OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  246 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 221
    INT_VAL     shift, and go to state 514
    OPEN_ARR    shift, and go to state 153

    message_call  go to state 222
    sender        go to state 223


state 497

   65 array_body: array_body COMMA expr .

    $default  reduce using rule 65 (array_body)


state 498

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   76 array_body2: array_body2 COMMA OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 515
    COMMA    shift, and go to state 466


state 499

  114 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body . catch_statment

    CATCH    shift, and go to state 262
    FINALLY  shift, and go to state 263

    catch_statment  go to state 516


state 500

  160 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 160 (for_loop_header)


state 501

  158 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 158 (for_loop_header)


state 502

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 157 (for_loop_header)


state 503

  236 switch_body: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  237            | DEFAULT SEMI_COLUMN statement . error SEMI_COMA

    error  shift, and go to state 517
    BREAK  shift, and go to state 518


state 504

   99 p_type: error . type CLOSE_P
  198 logic_expr2: error . expr2
  200            | error . logic_expr2 CLOSE_P

    error       shift, and go to state 504
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 505
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 506
    OPEN_ARR    shift, and go to state 153

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr2   go to state 519
    expr2         go to state 520
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 505

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  195 logic_expr2: OPEN_P . logic_expr2 CLOSE_P
  199            | OPEN_P . logic_expr2 error
  216 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 504
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 505
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 506
    OPEN_ARR    shift, and go to state 153

    type          go to state 126
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 158
    logic_expr2   go to state 521
    expr2         go to state 522
    long_id       go to state 203
    simple_expr   go to state 523
    message_call  go to state 177


state 506

  194 logic_expr2: NOT_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 524
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 507

  196 logic_expr2: logic_expr2 . AND_AND logic_expr2
  197            | logic_expr2 . OR_OR logic_expr2
  240 case_statement: logic_expr2 .

    AND_AND  shift, and go to state 525
    OR_OR    shift, and go to state 526

    $default  reduce using rule 240 (case_statement)


state 508

  189 logic_expr2: expr2 . LESS_THAN expr2
  190            | expr2 . MORE_THAN expr2
  191            | expr2 . LESS_OR_EQUAL expr2
  192            | expr2 . MORE_OR_EQUAL expr2
  193            | expr2 . EQUAL_EQUAL expr2
  241 case_statement: expr2 .

    LESS_THAN      shift, and go to state 527
    MORE_THAN      shift, and go to state 528
    LESS_OR_EQUAL  shift, and go to state 529
    MORE_OR_EQUAL  shift, and go to state 530
    EQUAL_EQUAL    shift, and go to state 531

    $default  reduce using rule 241 (case_statement)


state 509

  201 expr2: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 236
    MINUS  shift, and go to state 237
    MULTI  shift, and go to state 238
    DIV    shift, and go to state 239

    $default  reduce using rule 201 (expr2)


state 510

  234 switch_body: CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    CLOSE_P  shift, and go to state 532


state 511

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 59 (variable_declarations)


state 512

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 63 (ArrayOne)


state 513

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 533
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 514

   67 array_body: array_body COMMA OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 534


state 515

   76 array_body2: array_body2 COMMA OPEN_S array_body CLOSE_S .

    $default  reduce using rule 76 (array_body2)


state 516

  114 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment .

    $default  reduce using rule 114 (catch_statment)


state 517

  237 switch_body: DEFAULT SEMI_COLUMN statement error . SEMI_COMA

    SEMI_COMA  shift, and go to state 535


state 518

  236 switch_body: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 536


state 519

  196 logic_expr2: logic_expr2 . AND_AND logic_expr2
  197            | logic_expr2 . OR_OR logic_expr2
  200            | error logic_expr2 . CLOSE_P

    CLOSE_P  shift, and go to state 537
    AND_AND  shift, and go to state 525
    OR_OR    shift, and go to state 526


state 520

  189 logic_expr2: expr2 . LESS_THAN expr2
  190            | expr2 . MORE_THAN expr2
  191            | expr2 . LESS_OR_EQUAL expr2
  192            | expr2 . MORE_OR_EQUAL expr2
  193            | expr2 . EQUAL_EQUAL expr2
  198            | error expr2 .

    LESS_THAN      shift, and go to state 527
    MORE_THAN      shift, and go to state 528
    LESS_OR_EQUAL  shift, and go to state 529
    MORE_OR_EQUAL  shift, and go to state 530
    EQUAL_EQUAL    shift, and go to state 531

    $default  reduce using rule 198 (logic_expr2)


state 521

  195 logic_expr2: OPEN_P logic_expr2 . CLOSE_P
  196            | logic_expr2 . AND_AND logic_expr2
  197            | logic_expr2 . OR_OR logic_expr2
  199            | OPEN_P logic_expr2 . error

    error    shift, and go to state 538
    CLOSE_P  shift, and go to state 539
    AND_AND  shift, and go to state 525
    OR_OR    shift, and go to state 526


state 522

  189 logic_expr2: expr2 . LESS_THAN expr2
  190            | expr2 . MORE_THAN expr2
  191            | expr2 . LESS_OR_EQUAL expr2
  192            | expr2 . MORE_OR_EQUAL expr2
  193            | expr2 . EQUAL_EQUAL expr2

    LESS_THAN      shift, and go to state 527
    MORE_THAN      shift, and go to state 528
    LESS_OR_EQUAL  shift, and go to state 529
    MORE_OR_EQUAL  shift, and go to state 530
    EQUAL_EQUAL    shift, and go to state 531


state 523

  201 expr2: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  216            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 236
    MINUS    shift, and go to state 237
    CLOSE_P  shift, and go to state 265
    MULTI    shift, and go to state 238
    DIV      shift, and go to state 239

    $default  reduce using rule 201 (expr2)


state 524

  194 logic_expr2: NOT_EQUAL expr2 .

    $default  reduce using rule 194 (logic_expr2)


state 525

  196 logic_expr2: logic_expr2 AND_AND . logic_expr2

    error       shift, and go to state 504
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 505
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 506
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr2   go to state 540
    expr2         go to state 522
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 526

  197 logic_expr2: logic_expr2 OR_OR . logic_expr2

    error       shift, and go to state 504
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 505
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    NOT_EQUAL   shift, and go to state 506
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    logic_expr2   go to state 541
    expr2         go to state 522
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 527

  189 logic_expr2: expr2 LESS_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 542
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 528

  190 logic_expr2: expr2 MORE_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 543
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 529

  191 logic_expr2: expr2 LESS_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 544
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 530

  192 logic_expr2: expr2 MORE_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 545
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 531

  193 logic_expr2: expr2 EQUAL_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr2         go to state 546
    long_id       go to state 203
    simple_expr   go to state 509
    message_call  go to state 177


state 532

  234 switch_body: CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement error SEMI_COMA switch_body

    SEMI_COLUMN  shift, and go to state 547


state 533

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 68 (array_body)


state 534

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 548


state 535

  237 switch_body: DEFAULT SEMI_COLUMN statement error SEMI_COMA .

    $default  reduce using rule 237 (switch_body)


state 536

  236 switch_body: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 236 (switch_body)


state 537

  200 logic_expr2: error logic_expr2 CLOSE_P .

    $default  reduce using rule 200 (logic_expr2)


state 538

  199 logic_expr2: OPEN_P logic_expr2 error .

    $default  reduce using rule 199 (logic_expr2)


state 539

  195 logic_expr2: OPEN_P logic_expr2 CLOSE_P .

    $default  reduce using rule 195 (logic_expr2)


state 540

  196 logic_expr2: logic_expr2 . AND_AND logic_expr2
  196            | logic_expr2 AND_AND logic_expr2 .
  197            | logic_expr2 . OR_OR logic_expr2

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 196 (logic_expr2)


state 541

  196 logic_expr2: logic_expr2 . AND_AND logic_expr2
  197            | logic_expr2 . OR_OR logic_expr2
  197            | logic_expr2 OR_OR logic_expr2 .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 197 (logic_expr2)


state 542

  189 logic_expr2: expr2 LESS_THAN expr2 .

    $default  reduce using rule 189 (logic_expr2)


state 543

  190 logic_expr2: expr2 MORE_THAN expr2 .

    $default  reduce using rule 190 (logic_expr2)


state 544

  191 logic_expr2: expr2 LESS_OR_EQUAL expr2 .

    $default  reduce using rule 191 (logic_expr2)


state 545

  192 logic_expr2: expr2 MORE_OR_EQUAL expr2 .

    $default  reduce using rule 192 (logic_expr2)


state 546

  193 logic_expr2: expr2 EQUAL_EQUAL expr2 .

    $default  reduce using rule 193 (logic_expr2)


state 547

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement error SEMI_COMA switch_body

    error       shift, and go to state 77
    TRY         shift, and go to state 142
    IDENTIFIER  shift, and go to state 143
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    FOR         shift, and go to state 150
    WHILE       shift, and go to state 151
    IF          shift, and go to state 152
    OPEN_ARR    shift, and go to state 153
    RETURN      shift, and go to state 154
    DO          shift, and go to state 155
    SWITCH      shift, and go to state 156
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 147 (@6)

    variable_declaration   go to state 157
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 158
    try_catch              go to state 159
    statement              go to state 549
    @6                     go to state 162
    return_statement       go to state 163
    loop_statement         go to state 164
    for_loop               go to state 165
    for_loop_header        go to state 166
    expr                   go to state 167
    assign_expr            go to state 168
    long_id                go to state 169
    simple_expr            go to state 170
    while_loop             go to state 171
    while_loop_header      go to state 172
    do_while_loop          go to state 173
    conditional_statement  go to state 174
    switch                 go to state 175
    if_header              go to state 176
    message_call           go to state 177


state 548

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 213
    OPEN_P      shift, and go to state 145
    STRING_VAL  shift, and go to state 146
    FLOAT_VAL   shift, and go to state 147
    CHAR_VAL    shift, and go to state 148
    INT_VAL     shift, and go to state 149
    OPEN_ARR    shift, and go to state 153

    p_type        go to state 158
    expr          go to state 550
    assign_expr   go to state 168
    long_id       go to state 169
    simple_expr   go to state 170
    message_call  go to state 177


state 549

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . BREAK SEMI_COMA switch_body
  235            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . error SEMI_COMA switch_body

    error  shift, and go to state 551
    BREAK  shift, and go to state 552


state 550

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 67 (array_body)


state 551

  235 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 553


state 552

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 554


state 553

  235 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 555


state 554

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 450
    CASE     shift, and go to state 451

    switch_body  go to state 556


state 555

  235 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body .

    $default  reduce using rule 235 (switch_body)


state 556

  234 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body .

    $default  reduce using rule 234 (switch_body)
